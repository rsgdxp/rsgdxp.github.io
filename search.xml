<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo Host key verification failed.</title>
      <link href="/2023/11/20/hexo-host-key-verification-failed/"/>
      <url>/2023/11/20/hexo-host-key-verification-failed/</url>
      
        <content type="html"><![CDATA[<p>报错如下：</p><p><img src="https://pic.imgdb.cn/item/655afab6c458853aef00fe64.png" alt=""></p><p>由于我N九没更新（更新了一次 没注意看报错其实）上网查询 得知 4月份GITHUB官方更新了一次秘钥。那么看</p><p>大致意思就是RSA密钥的指纹对不上，或者是仓库没有权限，在排除权限问题后，需要扫描一下<code>github.com</code>使用的指纹，并添加到<code>~/.ssh/known_hosts</code>中，执行：</p><p><code>ssh-keyscan -H github.com &gt;&gt; ~/.ssh/known_hosts</code></p><p>即可。</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> key </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo Error: Spawn failed</title>
      <link href="/2023/11/20/hexo-error-spawn-failed/"/>
      <url>/2023/11/20/hexo-error-spawn-failed/</url>
      
        <content type="html"><![CDATA[<p>报错如下：</p><p><code>Please make sure you have the correct access rightsand the repository exists.FATAL Something&#39;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlError: Spawn failed    at ChildProcess.&lt;anonymous&gt; (F:\hexo\node_modules\hexo-util\lib\spawn.js:51:21)    at ChildProcess.emit (events.js:315:20)    at ChildProcess.cp.emit (F:\hexo\node_modules\cross-spawn\lib\enoent.js:34:29)    at Process.ChildProcess._handle.onexit (internal/child_process.js:275:12)</code></p><p>删除之前的秘钥 重新创建一个</p><p><code>rm -f ~/.ssh/id_rsa.pub</code></p><p><code>ssh-keygen -t rsa -C &quot;2809…840@qq.com&quot;</code></p><p><img src="https://pic.imgdb.cn/item/655af8b9c458853aeffb08de.png" alt=""></p><p>然后 <strong>在C:\Users\Administrator.ssh</strong>  下打开新创建的id_ras.pub文件 复制里面的秘钥 到</p><p>你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p><img src="https://pic2.zhimg.com/80/v2-faaf37a5a7ae6b92af4d81a28bf6d625_720w.webp" alt="img"></p><p>将刚复制的内容粘贴到key那里，title随便填，保存。</p><p>然后 hexo d -g 解决问题。</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Spawn failed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>心安即是归处</title>
      <link href="/2023/11/20/xin-an-ji-shi-gui-chu/"/>
      <url>/2023/11/20/xin-an-ji-shi-gui-chu/</url>
      
        <content type="html"><![CDATA[<p>起了这个文章，一时间却不知道真正的该写些什么。脑海里原本想着写流水日记之类的……</p><p>距离那一次更新，我也不想去计算到底多久了……</p><p>最近这一年，过的算是—— “自由吧” 啥都是按自己来的。工作先不说，是新的开始，还算能继续。</p><p>最近 沉迷于所谓的 汽水讨论区 和 电动讨论区。懂的都懂。</p><p><img src="https://pic.imgdb.cn/item/655adb4dc458853aef9b60c9.png" alt=""></p><p>然后 就是上班盘我的文玩，好轻松啊 捂脸 捂脸 ……</p><p>当然 要说的是 惆怅也有 当然 总不能忧愁度日 还算当下该干什么干什么 有些规划是需要条件的 不是愿望一下就可以实现的，至少 有时需要一步步的来的。目标要有但是选择更重要。自勉。</p><p>再然后就是 爱上读 微信读书  得到 这些APP里度日了 感觉也充实了不少。也许这就是从电脑端转移到移动端的趋势结果啊。PC上的确用的时间少多了 再提一下XBOX上 安卓那手机上 使命19 与战区移动端 也花了不少时间。再再就是那些无时间顾及却又贪多的心态了。篆刻。写隶书。手磨咖啡。啊啊啊啊。</p><p>流水到此。来日继续。</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2Ray客户端</title>
      <link href="/2022/01/06/v2ray-ke-hu-duan/"/>
      <url>/2022/01/06/v2ray-ke-hu-duan/</url>
      
        <content type="html"><![CDATA[<p><strong>V2Ray</strong>是近几年兴起的科学上网技术，采用新的协议，因功能强大、能有效抵抗墙的干扰而广受好评。<strong>V2Ray官网</strong>是 <a href="https://v2ray.com/" target="_blank" rel="noopener">https://v2ray.com</a>(V2fly社区官网是 <a href="https://www.v2fly.org/)，目前已无法直接打开。V2Ray安装部署及流量伪装请参考：[V2Ray教程](https://tlanyan.pp.ua/v2ray-tutorial)" target="_blank" rel="noopener">https://www.v2fly.org/)，目前已无法直接打开。V2Ray安装部署及流量伪装请参考：[V2Ray教程](https://tlanyan.pp.ua/v2ray-tutorial)</a> 和 <a href="https://tlanyan.pp.ua/v2ray-traffic-mask/" target="_blank" rel="noopener">V2Ray高级技巧：流量伪装</a>，或直接参考 <a href="https://tlanyan.pp.ua/xray-tutorial/" target="_blank" rel="noopener">Xray教程</a>。</p><p>本站提供最新版v2ray Windows客户端、v2ray安卓客户端、v2ray mac客户端、v2ray苹果客户端和v2ray Linux客户端下载，并给出各v2ray客户端配置教程。</p><hr><p><strong>V2ray Windows客户端</strong>：</p><table><thead><tr><th>V2rayN</th><th><a href="https://tlanyan.pp.ua/download.php?filename=/v2/windows/v2rayN-v4.20.zip" target="_blank" rel="noopener">v2rayN-v4.20.zip</a></th><th><a href="https://github.com/2dust/v2rayN/releases" target="_blank" rel="noopener">官网下载</a></th><th><a href="https://tlanyan.pp.ua/go.php?key=v2rayn-config-new" target="_blank" rel="noopener">V2rayN 4.12配置教程</a></th></tr></thead><tbody><tr><td>Clash for Windows</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/windows/Clash.for.Windows.Setup.0.19.4.exe" target="_blank" rel="noopener">Clash.for.windows-0.19.4.exe</a></td><td><a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener">官网下载</a></td><td><a href="https://tlanyan.pp.ua/go.php?key=v2ray-clash-win-config" target="_blank" rel="noopener">v2ray Clash配置教程</a></td></tr><tr><td>Netch</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/windows/Netch-v1.9.2.7z" target="_blank" rel="noopener">Netch-v1.9.2.7z</a></td><td><a href="https://github.com/NetchX/Netch/releases" target="_blank" rel="noopener">官网下载</a></td><td></td></tr><tr><td>Qv2ray</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/windows/Qv2ray.v2.7.0-pre2-x64.7z" target="_blank" rel="noopener">Qv2ray.v2.7.0-pre2.7z</a></td><td><a href="https://github.com/Qv2ray/Qv2ray/releases" target="_blank" rel="noopener">官网下载</a></td><td><a href="https://tlanyan.pp.ua/go.php?key=qv2ray-config" target="_blank" rel="noopener">Qv2ray配置教程</a></td></tr><tr><td>winXray</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/windows/winXray-v3.7.7z" target="_blank" rel="noopener">winXray-v3.7.7z</a></td><td><del><a href="https://github.com/i5g5vip/winXray" target="_blank" rel="noopener">官网下载</a></del></td><td><a href="https://tlanyan.pp.ua/go.php?key=winxray-config" target="_blank" rel="noopener">winXray配置教程</a></td></tr><tr><td>V2rayW</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/windows/v2rayW-v1.0.0-beta2.zip" target="_blank" rel="noopener">v2rayW-v1.0.0-beta2.zip</a></td><td><a href="https://github.com/Cenmrev/V2RayW/releases" target="_blank" rel="noopener">官网下载</a></td><td><a href="https://tlanyan.pp.ua/go.php?key=v2rayw-config" target="_blank" rel="noopener">V2rayW配置教程</a></td></tr><tr><td>V2rayS</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/windows/v2rayS-v1.0.0.3.zip" target="_blank" rel="noopener">v2rayS-v1.0.0.3.zip</a></td><td><a href="https://github.com/Shinlor/V2RayS/releases" target="_blank" rel="noopener">官网下载</a></td><td><a href="https://tlanyan.pp.ua/go.php?key=v2rays-config" target="_blank" rel="noopener">V2rayS配置教程</a></td></tr><tr><td>Mellow</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/windows/Mellow.Setup.0.1.22.exe" target="_blank" rel="noopener">Mellow.Setup.0.1.22.exe</a></td><td><a href="https://github.com/mellow-io/mellow/releases" target="_blank" rel="noopener">官网下载</a></td><td></td></tr></tbody></table><p><strong>本站提供的V2rayN即官网的V2rayN-Core.zip</strong>，不需要单独下载V2ray-Core，并且支持<a href="https://tlanyan.pp.ua/introduce-v2ray-vless-protocol/" target="_blank" rel="noopener">VLESS协议</a>、<a href="https://tlanyan.pp.ua/trojan-tutorial/" target="_blank" rel="noopener">trojan协议</a>。注意：V2rayN 4.0版起抛弃PAC，改用路由模式，支持VLESS+XTLS，但<strong>需手动切换Xray内核</strong>，详细设置请参考V2rayN 4.12配置教程。</p><p><strong>V2ray安卓客户端</strong>：</p><table><thead><tr><th>V2rayNG</th><th><a href="https://tlanyan.pp.ua/download.php?filename=/v2/android/v2rayNG-v1.6.28.apk" target="_blank" rel="noopener">v2rayNG-v1.6.28.apk</a></th><th><a href="https://github.com/2dust/v2rayNG/releases" target="_blank" rel="noopener">官网下载</a></th><th><a href="https://tlanyan.pp.ua/go.php?key=v2rayng-config" target="_blank" rel="noopener">V2rayNG配置教程</a></th></tr></thead><tbody><tr><td>AnXray</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/android/AnXray-v0.4rc06.apk" target="_blank" rel="noopener">AnXray v0.4rc06.apk</a></td><td><a href="https://github.com/XTLS/AnXray/releases" target="_blank" rel="noopener">官网下载</a></td><td></td></tr><tr><td>Kitsunebi</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/android/Kitsunebi_v1.4.2.apk" target="_blank" rel="noopener">Kitsunebi_v1.4.2.apk</a></td><td><a href="https://github.com/rurirei/Kitsunebi/releases" target="_blank" rel="noopener">官网下载</a></td><td><a href="https://tlanyan.pp.ua/go.php?key=kitsunebi-config" target="_blank" rel="noopener">Kitsunebi配置教程</a></td></tr><tr><td>Clash for Android</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/android/ClashForAndroid-v2.4.14.apk" target="_blank" rel="noopener">ClashForAndroid-v2.4.14.apk</a></td><td><a href="https://github.com/Kr328/ClashForAndroid/releases" target="_blank" rel="noopener">官网下载</a></td><td><a href="https://tlanyan.pp.ua/go.php?key=v2ray-clash-an-config" target="_blank" rel="noopener">v2ray Clash安卓配置教程</a></td></tr><tr><td>BifrostV</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/android/bifrostV-v0.6.8.apk" target="_blank" rel="noopener">bifrostV-v0.6.8.apk</a></td><td><a href="https://apkpure.com/bifrostv/com.github.dawndiy.bifrostv" target="_blank" rel="noopener">上游下载</a></td><td><a href="https://tlanyan.pp.ua/go.php?key=bifrostv-config" target="_blank" rel="noopener">BifrostV配置教程</a></td></tr><tr><td>SSRRay</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/android/ssrray-v3.8.15.apk" target="_blank" rel="noopener">ssrray-v3.8.15.apk</a></td><td><a href="https://github.com/xxf098/shadowsocksr-v2ray-trojan-android/releases" target="_blank" rel="noopener">官网下载</a></td><td></td></tr></tbody></table><p>v2rayNG安卓与<a href="https://tlanyan.pp.ua/xray-tutorial/" target="_blank" rel="noopener">Xray项目</a>保持同步，支持 <a href="https://tlanyan.pp.ua/introduce-v2ray-vless-protocol/" target="_blank" rel="noopener">vless协议</a> 和 <a href="https://tlanyan.pp.ua/trojan-tutorial/" target="_blank" rel="noopener">trojan协议</a>等多协议，推荐使用。<strong>PS</strong>：AnXray是<a href="https://tlanyan.pp.ua/xray-tutorial/" target="_blank" rel="noopener">Xray项目</a>主持人 @rprx 推荐的客户端，完全开源且功能强大，也推荐使用。</p><p><strong>V2ray苹果客户端/V2ray iOS客户端</strong>：</p><p>免费v2ray iOS客户端有OneClick、Leaf，付费v2ray iOS客户端有：<strong>Shadowrocket</strong>、pepi、i2Ray、<strong>Kitsunebi</strong>和<strong>Quantumult</strong>。无法在苹果商店搜索到这些app请参考 <a href="https://tlanyan.pp.ua/get-proxy-clients/" target="_blank" rel="noopener">获取ios科学上网客户端</a>。</p><p><strong>V2ray Mac客户端</strong>：</p><table><thead><tr><th>ClashX Pro</th><th><a href="https://tlanyan.pp.ua/download.php?filename=/v2/macos/ClashX-Pro-v1.70.0.2.dmg" target="_blank" rel="noopener">ClashX-Pro-v1.70.0.2.dmg</a></th><th><a href="https://github.com/yichengchen/clashX/releases" target="_blank" rel="noopener">官网下载</a></th><th><a href="https://tlanyan.pp.ua/go.php?key=v2ray-clashx-config" target="_blank" rel="noopener">ClashX配置教程</a></th></tr></thead><tbody><tr><td>Qv2ray</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/macos/Qv2ray.v2.7.0-pre2.dmg" target="_blank" rel="noopener">Qv2ray v2.7.0-pre2.dmg</a></td><td><a href="https://github.com/Qv2ray/Qv2ray/releases" target="_blank" rel="noopener">官网下载</a></td><td><a href="https://tlanyan.pp.ua/go.php?key=qv2ray-config" target="_blank" rel="noopener">Qv2ray配置教程</a></td></tr><tr><td>V2rayX</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/macos/v2rayX-v1.5.1.zip" target="_blank" rel="noopener">v2rayX-v1.5.1.zip</a></td><td><a href="https://github.com/Cenmrev/V2RayX/releases" target="_blank" rel="noopener">官网下载</a></td><td><a href="https://tlanyan.pp.ua/go.php?key=v2rayx-config" target="_blank" rel="noopener">V2rayX配置教程</a></td></tr><tr><td>V2rayU</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/macos/v2rayU-v3.2.0.dmg" target="_blank" rel="noopener">v2rayU-v3.2.0.dmg</a></td><td><a href="https://github.com/yanue/V2rayU/releases" target="_blank" rel="noopener">官网下载</a></td><td><a href="https://tlanyan.pp.ua/go.php?key=v2rayu-config" target="_blank" rel="noopener">V2rayU配置教程</a></td></tr></tbody></table><p>ClashX界面美观，本站提供的ClashX Pro版本有<strong>增强模式</strong>并且<strong>可用在M1芯片的MAC上面</strong>，适合颜值党和有订阅地址的网友使用。Qv2ray支持支持<a href="https://tlanyan.pp.ua/on-fuck-gfw-again/" target="_blank" rel="noopener">SS</a>、SSR、<a href="https://tlanyan.pp.ua/v2ray-tutorial/" target="_blank" rel="noopener">VMESS</a>、<a href="https://tlanyan.pp.ua/introduce-v2ray-vless-protocol/" target="_blank" rel="noopener">VLESS</a>、<a href="https://tlanyan.pp.ua/trojan-tutorial/" target="_blank" rel="noopener">trojan</a>等多种协议(需安装插件)，推荐VLESS或者<a href="https://tlanyan.pp.ua/xray-tutorial/" target="_blank" rel="noopener">Xray</a>时使用。<strong>PS</strong>：V2rayU在最新版MacOS上运行有问题，不再推荐。</p><p><strong>V2ray Linux客户端：</strong></p><table><thead><tr><th>Qv2ray</th><th><a href="https://tlanyan.pp.ua/download.php?filename=/v2/linux/Qv2ray.v2.7.0-pre2-x64.AppImage" target="_blank" rel="noopener">Qv2ray.v2.7.0-pre2-x64.AppImage</a></th><th><a href="https://github.com/Qv2ray/Qv2ray/releases" target="_blank" rel="noopener">官网下载</a></th><th><a href="https://tlanyan.pp.ua/go.php?key=qv2ray-config" target="_blank" rel="noopener">Qv2ray配置教程</a></th></tr></thead><tbody><tr><td>V2rayA</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/linux/v2rayA-linux_amd64-v1.1.2" target="_blank" rel="noopener">v2rayA-linux_amd64-v1.1.2</a></td><td><a href="https://github.com/v2rayA/v2rayA/releases" target="_blank" rel="noopener">官网下载</a></td><td><a href="https://tlanyan.pp.ua/go.php?key=v2raya-config" target="_blank" rel="noopener">v2rayA配置教程</a></td></tr><tr><td>V2rayL</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/linux/v2rayLui-v2.1.3.zip" target="_blank" rel="noopener">v2rayLui-v2.1.3.zip</a></td><td><a href="https://github.com/jiangxufeng/v2rayL/releases" target="_blank" rel="noopener">官网下载</a></td><td><a href="https://github.com/jiangxufeng/v2rayL/" target="_blank" rel="noopener">官方文档</a></td></tr><tr><td>Mellow</td><td><a href="https://tlanyan.pp.ua/download.php?filename=/v2/linux/Mellow-0.1.22.AppImage" target="_blank" rel="noopener">Mellow-0.1.22.AppImage</a></td><td><a href="https://github.com/mellow-io/mellow/releases" target="_blank" rel="noopener">官网下载</a></td><td></td></tr></tbody></table><p>Linux运行AppImage文件请参考：<a href="https://tlanyan.pp.ua/how-to-run-appimage-file/" target="_blank" rel="noopener">如何安装运行AppImage文件？</a></p><p><strong>注意：</strong> 客户端需要配置/购买 <strong>v2ray节点</strong> 才能上外网， v2ray服务端部署请参考：<a href="https://tlanyan.pp.ua/go.php?key=v2ray-new-script" target="_blank" rel="noopener">V2Ray一键脚本</a>，购买服务可考虑 <a href="https://vpsxueyuan.com/just-my-socks-tutorial/" target="_blank" rel="noopener">搬瓦工官方代理Just My Socks</a>。</p><hr><p>其他客户端下载：</p><ul><li><a href="https://tlanyan.pp.ua/shadowsock-clients/" target="_blank" rel="noopener">Shadowsocks/SS客户端</a></li><li><a href="https://tlanyan.pp.ua/shadowsockr-shadowsocksr-shadowsocksrr-clients/" target="_blank" rel="noopener">ShadowsocksR/SSR客户端</a></li><li><a href="https://tlanyan.pp.ua/trojan-clients-download/" target="_blank" rel="noopener">trojan客户端</a></li><li><a href="https://tlanyan.pp.ua/trojan-go-clients-download/" target="_blank" rel="noopener">trojan-go客户端</a></li><li><a href="https://tlanyan.pp.ua/wireguard-clients/" target="_blank" rel="noopener">WireGuard客户端</a></li></ul><p>突然无法科学上网或者服务器被墙？请参考：<a href="https://tlanyan.pp.ua/recovery-blocked-ip/" target="_blank" rel="noopener">拯救被墙的服务器</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> V2Ray </tag>
            
            <tag> 各平台科学上网客户端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hax free vps搭建xray 面板（x-ui）教程</title>
      <link href="/2022/01/06/hax-free-vps-da-jian-xray-mian-ban-x-ui-jiao-cheng/"/>
      <url>/2022/01/06/hax-free-vps-da-jian-xray-mian-ban-x-ui-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>1、一个域名</p><p>2、需要一个cloudflare账号（地址：<a href="http://cloudflare.com/" target="_blank" rel="noopener">cloudflare.com</a>）</p><p>3、把域名的DNS修改为cloudflare的DNS服务器</p><p>4、开始白嫖VPS（1周，无限续期）<a href="http://hax.co.id/" target="_blank" rel="noopener">hax.co.id</a> （注册需要电报）</p><p>个人觉得IPV4 与IPV6 映射转换这里要注意 细节。</p><p><img src="https://pic.imgdb.cn/item/61d5e3bc2ab3f51d91aee6dc.png" alt=""></p><p>5、支持多协议多用户的 xray 面板</p><blockquote><p>  bash &lt;(curl -Ls <a href="https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh" target="_blank" rel="noopener">https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh</a>)</p></blockquote><p><img src="https://pic.imgdb.cn/item/61d5e3ea2ab3f51d91af032d.png" alt=""></p><p>6、建立域名证书，CloudflareST挑选速度最快的IP</p><p>CloudflareST开源下载：<a href="https://github.com/XIU2/CloudflareSpeedTest" target="_blank" rel="noopener">https://github.com/XIU2/CloudflareSpeedTest</a></p><p>参考：</p><p><a href="https://binghequanzi.blogspot.com/2021/12/vpshaxxray-x-uivmessvlesstrojanshadowso.html" target="_blank" rel="noopener">https://binghequanzi.blogspot.com/2021/12/vpshaxxray-x-uivmessvlesstrojanshadowso.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> hax.co.id </tag>
            
            <tag> x-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费的可无限续期的VPS</title>
      <link href="/2022/01/05/mian-fei-de-ke-wu-xian-xu-qi-de-vps/"/>
      <url>/2022/01/05/mian-fei-de-ke-wu-xian-xu-qi-de-vps/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.euserv.com/en/" target="_blank" rel="noopener">euserv</a> 提供1个月免费ipv6,可以利用脚本或者手动续期，ipv6未来趋势，而且它可以搭建各种服务。</p><p><a href="https://www.euserv.com/en/" target="_blank" rel="noopener">https://www.euserv.com/en/</a></p><p><img src="https://pic.imgdb.cn/item/61d5a2832ab3f51d9182a4a2.png" alt=""></p><p>首先，<a href="https://www.euserv.com/en/virtual-private-server/root-vserver/v2/index.php" target="_blank" rel="noopener">https://www.euserv.com/en/virtual-private-server/root-vserver/v2/index.php</a> 这个页面上找到免费的服务器，然后按照提示购买，继续付款，然后再登陆处点击注册账户。</p><p>注册的过程就不说了，就是邮箱验证后，然后确认购买这0元的vps。系统邮件发送后，请注意不能一直等待。</p><p>我们直接在 <a href="https://support.euserv.com/index.iphp" target="_blank" rel="noopener">https://support.euserv.com/index.iphp</a> 页面，直接完善资料，这一个页面请认真填写，因为关系到你是否可以通过审核。主要是地址和电话，也有人说地址最重要。</p><p>完成以后，点击保存。接下来就是等待邮件了。幸运的话，账号一次搞定，你就可以享受这台小鸡。配置为1核1G10G1G带宽，基本上很爽。</p><p>补充：一直等了6天才回复，通过了。邮件通过大致内容见评论。</p><p>在这里说一下ssh ipv6的方法：</p><p>win电脑管理员执行如下命令，建立隧道：</p><p><code>netsh interface teredo set state enterpriseclient server=default</code><br><code>netsh interface ipv6 reset</code><br><code>netsh interface teredo set state server=teredo.remlab.net</code></p><p>这一行是关闭隧道：<br><code>netsh interface Teredo set state disable</code></p><p>建立隧道后：<br><code>netsh interface Teredo set state disable</code><br><code>netsh interface Teredo set state type=default</code><br><code>ping -6 ipv6.test-ipv6.com</code></p><p>ping通最好，ping不通也会偶尔出现的。</p><p>另外，euserv给的地址特别长，推荐你把/和后面的数字去掉，ping一下，然后复制ping到的ipv6地址，利用ssh连接即可。密码在<strong>Server data</strong> 那里。</p><p>现在可以安装你想要应用了。<strong>最后，euserv还需要手动续期，手动续期，手动续期。</strong></p><p>最后给大家再介绍一个免费的，也是手动续期的ipv6： <a href="https://hax.co.id/" target="_blank" rel="noopener">https://hax.co.id/</a> 这个由个好处就是官方提供ipv4映射，操作就比较简单了。</p><p>如果技术实在不行，我给你几个选择，以下都是IPv4的：</p><p>1、<a href="https://www.vultr.com/?ref=8730332" target="_blank" rel="noopener">https://www.vultr.com/?ref=8730332</a><br>2、<a href="https://iweec.com/50.html" target="_blank" rel="noopener">https://iweec.com/50.html</a><br>3、<a href="https://iweec.com/34.html" target="_blank" rel="noopener">https://iweec.com/34.html</a><br>4、<a href="https://s.click.taobao.com/uYPlOcu" target="_blank" rel="noopener">https://s.click.taobao.com/uYPlOcu</a></p><p>参考链接：<a href="https://iweec.com/42.html" target="_blank" rel="noopener">https://iweec.com/42.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> EUserv </tag>
            
            <tag> IPV6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换了新阿里云服务器</title>
      <link href="/2022/01/02/geng-huan-liao-xin-a-li-yun-fu-wu-qi/"/>
      <url>/2022/01/02/geng-huan-liao-xin-a-li-yun-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>以前兴趣使然学习弄的：</p><p>微信小程序</p><p><img src="https://www.rsgdxp.com/wxxcx.png" alt=""></p><p>发卡网</p><p><img src="https://www.rsgdxp.com/xprsgdxpcom.png" alt=""></p><p>都是在旧服务器上，尤其微信小程序花费了不少时间；弃之可惜，一年以来，忙工作都生疏了许久，有些操作过程还有记忆，有些还担心怎么迁移到新服务器呢。</p><p>好在，迁移过程中遇到的问题</p><p>像</p><blockquote><p>xp.rsgdxp.com 迁移过去报错 YAF_loader 错误</p><p>因为没安装YAF，</p><p>php配置文件配置开启yaf,然后重启php</p><p>[yaf]<br>yaf.use_namespace=1</p></blockquote><p>像</p><blockquote><p>小程序 缓存错误，DNS解析导入更改等小问题</p></blockquote><p>都一一解决了。</p><p>已经全部迁移完毕，测试均没有问题了。服务器配置也比之前有所提升，工作之余吧，有空还是要搞搞自己喜欢想做的事情。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>更换了这个主题下的评论系统，改为Valine 评论系统。</p><blockquote><p>插件主页：<em><a href="https://valine.js.org/" target="_blank" rel="noopener">https://valine.js.org/</a></em> ，上面有详细的介绍，可以查看<a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener">这里</a>，注册后，验证邮箱，绑定手机号，然后新建一个应用，获取到对应的 <code>AppId</code> 和 <code>AppKey</code>（<a href="https://console.leancloud.cn/apps/aagf25sxKEf9QjMIfK9dnxGs-gzGzoHsz/settings/keys），然后写回到主题文件下到" target="_blank" rel="noopener">https://console.leancloud.cn/apps/aagf25sxKEf9QjMIfK9dnxGs-gzGzoHsz/settings/keys），然后写回到主题文件下到</a> <code>_config.yml</code> 文件里，但是要<strong>注意一点，不要直接使用国内版进行注册，而要用国际版，否则无法申请二级域名</strong>。</p><pre><code>valine:  enable: true  appId: XXX  appKey: XXX  notify: true  verify: false  visitor: true  avatar: &#39;retro&#39; # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide  pageSize: 10  placeholder: &#39;Comment here&#39; # Comment Box placeholder  background: /medias/comment_bg.png</code></pre><p>最新版的 <code>Valine</code>  已经移除了邮件通知功能。如果没有邮件通知，很可能别人评价之后，你却毫不知情，后续回复对方也收不到。因此，需要再配置一个插件来实现，  ++<a href="https://github.com/zhaojun1998/Valine-Admin++" target="_blank" rel="noopener">https://github.com/zhaojun1998/Valine-Admin++</a> 。在配置这个插件之前，需要确保 <code>Valine</code> 可以正常工作，可以自己给自己评论一下进行测试。</p><p>配置好之后，别人在你的文章下评论后你便能收到邮件通知了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> Valine 评论系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>农夫山泉有点甜</title>
      <link href="/2021/05/06/nong-fu-shan-quan-you-dian-tian/"/>
      <url>/2021/05/06/nong-fu-shan-quan-you-dian-tian/</url>
      
        <content type="html"><![CDATA[<p>恍然隔世 似曾相识的经历</p><p>总是身不由己 却又是自己决定的路线；也许安好也许返回……</p><p>曾经54fxp.top 间隔数日 感受一番 ；而今 hexo一番（竟然都忘了cd 到hexo目录 😅）</p><p>来农夫已然快6月 新鲜 充实的生活有之，偶然间顿感挫折茫然感有之间。</p><p>加油 自己人。靠自己。</p><p>一个生命没有比心灵的自由快乐更为重要的事！</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 农夫山泉 </tag>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2Board后端V2Ray-Poseidon对接WS+TLS</title>
      <link href="/2020/06/17/v2board-hou-duan-v2ray-poseidon-dui-jie-ws-tls/"/>
      <url>/2020/06/17/v2board-hou-duan-v2ray-poseidon-dui-jie-ws-tls/</url>
      
        <content type="html"><![CDATA[<p>原文地址：<a href="https://www.54fxp.top/903.html" target="_blank" rel="noopener">https://www.54fxp.top/903.html</a></p><p>本站搭建的测试地址：<a href="https://v2.rsgdxp.com" target="_blank" rel="noopener">https://v2.rsgdxp.com</a> （兴趣技术学习交流）<br> 本次介绍 WebSocket + TLS协议的对接。后端采用的是Poseidon社区版对接，最多只允许50个用户同时在线。<br> <em><em><br> 提前准备工作：</em></em><br> cloudflare里新建域名 本次示例：v.liangdai.ga —–已修改 ；查看API 和 邮箱记录备用。<br> V2board站点里 新建节点 本次示例：4 号节点<br> <a href="https://www.54fxp.top/wp-content/uploads/2020/05/2020050206061828.png" target="_blank" rel="noopener"><img src="https://www.54fxp.top/wp-content/uploads/2020/05/2020050206061828.png" alt="V2Board后端V2Ray-Poseidon对接WS+TLS"></a></p><p>开始对接：</p><h2 id="1-通过SSH连接上你的Linux服务器，推荐使用CentOS7。"><a href="#1-通过SSH连接上你的Linux服务器，推荐使用CentOS7。" class="headerlink" title="1.通过SSH连接上你的Linux服务器，推荐使用CentOS7。"></a>1.通过SSH连接上你的Linux服务器，推荐使用CentOS7。</h2><h2 id="2-安装内核加速，推荐使用bbr-plus。先安装内核，选择2，重启后，开启加速，选择7。"><a href="#2-安装内核加速，推荐使用bbr-plus。先安装内核，选择2，重启后，开启加速，选择7。" class="headerlink" title="2.安装内核加速，推荐使用bbr plus。先安装内核，选择2，重启后，开启加速，选择7。"></a>2.安装内核加速，推荐使用bbr plus。先安装内核，选择2，重启后，开启加速，选择7。</h2><pre><code> wget -N --no-check-certificate &quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot; chmod +x tcp.sh ./tcp.sh ` 新环境，没有wget 安装即可： `yum install wget </code></pre><h2 id="3-同步时间为北京时间。一般不需要，保险起见，还是同步一下。"><a href="#3-同步时间为北京时间。一般不需要，保险起见，还是同步一下。" class="headerlink" title="3.同步时间为北京时间。一般不需要，保险起见，还是同步一下。"></a>3.同步时间为北京时间。一般不需要，保险起见，还是同步一下。</h2><pre><code> yum -y install ntpdate timedatectl set-timezone Asia/Shanghai ntpdate ntp1.aliyun.com</code></pre><h2 id="4-关闭防火墙。"><a href="#4-关闭防火墙。" class="headerlink" title="4.关闭防火墙。"></a>4.关闭防火墙。</h2><pre><code> systemctl disable firewalld systemctl stop firewalld</code></pre><h2 id="5-安装并启动-Docker-docker-compose。"><a href="#5-安装并启动-Docker-docker-compose。" class="headerlink" title="5.安装并启动 Docker/docker-compose。"></a>5.安装并启动 Docker/docker-compose。</h2><pre><code> curl -fsSL https://get.docker.com | bash curl -L  &quot;https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose chmod a+x /usr/local/bin/docker-compose rm -f `which dc` ln -s /usr/local/bin/docker-compose /usr/bin/dc</code></pre><p>需要等待一会，看自己网络环境。然后逐条执行：<br> <code>systemctl start docker</code></p><pre><code>service docker startsystemctl enable docker.service</code></pre><p><code>systemctl status docker.service</code><br> <a href="https://www.54fxp.top/wp-content/uploads/2020/05/2020050204455235.png" target="_blank" rel="noopener"><img src="https://www.54fxp.top/wp-content/uploads/2020/05/2020050204455235.png" alt="V2Board后端V2Ray-Poseidon对接WS+TLS"></a></p><h2 id="6-新环境安装下GIT-再从GitHub获取后端源码。"><a href="#6-新环境安装下GIT-再从GitHub获取后端源码。" class="headerlink" title="6.新环境安装下GIT,再从GitHub获取后端源码。"></a>6.新环境安装下GIT,再从GitHub获取后端源码。</h2><pre><code>yum install -y git git clone https://github.com/ColetteContreras/v2ray-poseidon.git</code></pre><h2 id="7-修改配置文件。config-json-只需要修改三项。docker-compose-yml需要修改四项。"><a href="#7-修改配置文件。config-json-只需要修改三项。docker-compose-yml需要修改四项。" class="headerlink" title="7.修改配置文件。config.json 只需要修改三项。docker-compose.yml需要修改四项。"></a>7.修改配置文件。config.json 只需要修改三项。docker-compose.yml需要修改四项。</h2><p>进入这里<br> <code>cd /root/v2ray-poseidon/docker/v2board/ws-tls</code></p><p>TCP的话就是cd /root/v2ray-poseidon/docker/v2board/tcp了。<br> docker-compose.yml 中由于么有域名解析，直接改端口就好了，就是V2board 新建节点时设置的端口</p><p>我链接端使用的FS，个人习惯直接FS里操作修改（当然VI编辑也好 比如vi config.json / vi docker-compose.yml）：</p><p><a href="https://www.54fxp.top/wp-content/uploads/2020/05/2020050204502868.png" target="_blank" rel="noopener"><img src="https://www.54fxp.top/wp-content/uploads/2020/05/2020050204502868.png" alt="V2Board后端V2Ray-Poseidon对接WS+TLS"></a></p><p>config.json中修改 下面三处，根据自己情况修改保存。</p><p><code>{ &quot;poseidon&quot;: { &quot;panel&quot;: &quot;v2board&quot;,         // 这一行必须存在，且不能更改  **&quot;nodeId&quot;: 1,                // 你的节点 ID 和 v2board 里的一致** &quot;checkRate&quot;: 60,            // 每隔多长时间同步一次配置文件、用户、上报服务器信息 **&quot;webapi&quot;: &quot;http or https://YOUR V2BOARD DOMAIN&quot;,// v2board 的域名信息 &quot;token&quot;: &quot;v2board token&quot;,   // v2board 和 v2ray-poseidon 的通信密钥**</code></p><p>“speedLimit”: 0, // 节点限速 单位 字节/s 0 表示不限速<br> “user”: {<br> “maxOnlineIPCount”: 0, // 用户同时在线 IP 数限制 0 表示不限制<br> “speedLimit”: 0 // 用户限速 单位 字节/s 0 表示不限速<br> },</p><p>“localPort”: 10084 // 本地 api, dokodemo-door,　监听在哪个端口，不能和服务端口相同<br> }<br> }</p><p>docker-compose.yml 修改</p><blockquote><p>‘服务端’修改为443<br> CloudCone DNS下面填入你的邮箱和API<br> command: tls cloudflare sga.const.cloud 去掉前面的#号 后面改成自己的域名</p></blockquote><p>本次示例：</p><blockquote><p>version: ‘3’</p><p>services:<br> v2ray-ws-tls:<br> image: v2cc/poseidon<br> container_name: v2ray-ws-tls<br> restart: always<br> ports:<br> # 使用 Caddy 生成 TLS 证书，所以后面的是 443<br> – “443:443”<br> volumes:<br> – ./config.json:/etc/v2ray/config.json<br> environment:<br> – USE_CADDY_TLS=true</p><p># 使用 cloudflare DNS 验证<br> – CF_API_EMAIL=fxp@gmail.com —–已修改<br> – CF_API_KEY=eea505b4f62841994a10e018eaf7986 —–已修改<br> # 使用 namesilo DNS 验证<br> – NAMESILO_API_KEY=<br> # 使用 namecheap DNS 验证<br> – NAMECHEAP_API_USER=<br> – NAMECHEAP_API_KEY=<br> # 使用哪个把哪个前面的井号去掉，其它的全部注释<br> command: tls cloudflare v.liangdai.ga —–已修改<br> #command: tls namesilo your.domain<br> #command: tls namecheap your.domain</p></blockquote><p>也可以参考这里：<a href="https://www.youtube.com/watch?v=mvy7NATECjI" target="_blank" rel="noopener">https://www.youtube.com/watch?v=mvy7NATECjI</a></p><h2 id="8-赋予Docker权限，并且启动Docker。"><a href="#8-赋予Docker权限，并且启动Docker。" class="headerlink" title="8.赋予Docker权限，并且启动Docker。"></a>8.赋予Docker权限，并且启动Docker。</h2><p><code>chmod +x  /bin/dc cd /root/v2ray-poseidon/docker/v2board/ws-tls dc up -d</code><br> <a href="https://www.54fxp.top/wp-content/uploads/2020/05/2020050205104737.png" target="_blank" rel="noopener"><img src="https://www.54fxp.top/wp-content/uploads/2020/05/2020050205104737.png" alt="V2Board后端V2Ray-Poseidon对接WS+TLS"></a><br> 查看日志：<br> <code>dc logs</code><br> <a href="https://www.54fxp.top/wp-content/uploads/2020/05/2020050304403141.png" target="_blank" rel="noopener"><img src="https://www.54fxp.top/wp-content/uploads/2020/05/2020050304403141.png" alt="V2Board后端V2Ray-Poseidon对接WS+TLS"></a></p><p>补充一下：昨天时间有限没再补充，实际测试是显示 [域名]acme: error presenting  token: cloudflare: failed to create TXT record: error from makeRequest:  HTTP status 401: invalid credentials 的，折腾一番后解决了，日志结果必须如上图所示才表示没有问题了。</p><h2 id="9-回到v2board站点，刷新新建节点，发现已经正常上线了，本例4-号节点。"><a href="#9-回到v2board站点，刷新新建节点，发现已经正常上线了，本例4-号节点。" class="headerlink" title="9.回到v2board站点，刷新新建节点，发现已经正常上线了，本例4 号节点。"></a>9.回到v2board站点，刷新新建节点，发现已经正常上线了，本例4 号节点。</h2><p><a href="https://www.54fxp.top/wp-content/uploads/2020/05/2020050205595645.png" target="_blank" rel="noopener"><img src="https://www.54fxp.top/wp-content/uploads/2020/05/2020050205595645.png" alt="V2Board后端V2Ray-Poseidon对接WS+TLS"></a><br> 连接上网测试一下 也没有问题 OK<br> <a href="https://www.54fxp.top/wp-content/uploads/2020/05/2020050305431274.png" target="_blank" rel="noopener"><img src="https://www.54fxp.top/wp-content/uploads/2020/05/2020050305431274.png" alt="V2Board后端V2Ray-Poseidon对接WS+TLS"></a></p><p> 写作分享不易，喜欢觉得有用，欢迎转发分享，或者打赏支持，谢谢！</p><p><strong>感谢大佬原创：</strong></p><p>参考视频地址（作者：<a href="https://www.54fxp.top/go?url=https://www.youtube.com/channel/UCLH-iTFxNfijgO_f32vbJZg" target="_blank" rel="noopener">Vincent Young</a>）：<strong><a href="https://www.54fxp.top/go?url=https://www.youtube.com/watch?v=mvy7NATECjI" target="_blank" rel="noopener">https://www.youtube.com/watch?v=mvy7NATECjI </a></strong></p><p>参考原文链接：<a href="https://www.54fxp.top/go?url=https://oneyyt.cn/index.php/2020/04/11/v2board-houduan/" target="_blank" rel="noopener">https://oneyyt.cn/index.php/2020/04/11/v2board-houduan/</a></p><p><strong>之前没有加原文链接，在此表示歉意；在此感谢所有原创作者，写作分享不易，希望大家都要相互尊重！感谢 谢谢！！！</strong></p><hr><p>靓时代网站<a href="http://www.54fxp.top版权所有丨原创推荐分类中内容，均为原创丨本网站采用[BY-NC-SA](https://www.54fxp.top/go?url=http://creativecommons.org/licenses/by-nc-sa/3.0/)协议进行授权">www.54fxp.top版权所有丨原创推荐分类中内容，均为原创丨本网站采用[BY-NC-SA](https://www.54fxp.top/go?url=http://creativecommons.org/licenses/by-nc-sa/3.0/)协议进行授权</a><br>转载请注明原文链接：<a href="https://www.54fxp.top/903.html" target="_blank" rel="noopener">V2Board后端V2Ray-Poseidon对接WS+TLS</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v2board </tag>
            
            <tag> V2Ray-Poseidon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos 7 Nginx安装与配置</title>
      <link href="/2020/06/13/centos-7-nginx-an-zhuang-yu-pei-zhi/"/>
      <url>/2020/06/13/centos-7-nginx-an-zhuang-yu-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx简介"><a href="#Nginx简介" class="headerlink" title="Nginx简介"></a>Nginx简介</h2><p>Nginx是一款高性能免费开源网页服务器，也可用于反向代理和负载均衡服务器。该软件由伊戈尔·赛索耶夫于2004年发布，2019年3月11日，Nginx被F5 Networks以6.7亿美元收购。2019年最新统计中，全球大约有32.97%的服务器使用Nginx。在官方测试中，能够支持上万并行连接。</p><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><h3 id="步骤1：-安装相关组件"><a href="#步骤1：-安装相关组件" class="headerlink" title="步骤1： 安装相关组件"></a>步骤1： 安装相关组件</h3><p>默认需要 <strong>zlib</strong>、<strong>openssl</strong> 和 <strong>pcre</strong> 依赖包，其他组件可以根据自己需要选择安装。输入如下命令：</p><p>#安装组件</p><p>yum -y install gcc gcc-c++ zlib zlib-devel openssl openssl-devel pcre pcre-devel</p><ul><li>gcc：编译器组件，包括C、C++等</li><li>zlib：数据压缩库</li><li>openssl：https安全传输协议，默认没有打开</li><li>pcre：正则表达式库</li></ul><h3 id="步骤2：编译安装Nginx"><a href="#步骤2：编译安装Nginx" class="headerlink" title="步骤2：编译安装Nginx"></a>步骤2：编译安装Nginx</h3><p>官方网站下载最新 <a href="https://nginx.org/en/download.html" target="_blank" rel="noopener">Nginx</a>，线上环境最好下载最新稳定版本<code>Stable version</code>。默认安装路径：<code>/usr/local/nginx</code></p><pre><code>#获取nginx。如果未安装wget，使用 yum -y install wgetwget https://nginx.org/download/nginx-1.17.1.tar.gz#解压，zxvf显示解压文件tar zxf nginx-1.17.1.tar.gz#进入nginx源文件目录cd nginx-1.17.1#编译，默认https没有打开，需要添加 --with-http_ssl_module./configure --with-http_ssl_module#安装Nginxmake &amp;&amp; make install#启动Nginx/usr/local/nginx/sbin/nginxConfiguration summary+ using system PCRE library+ OpenSSL library is not used+ using system zlib library</code></pre><p>以上信息表示 PCRE 和 zlib 使用系统库，OpenSSL 没有开启，不支持 https。</p><p>在浏览器中输入服务器地址，显示如下效果表示安装成功。</p><p><img src="https://docsxyz.com/upload/images/20190701/15619733753996.jpg" alt="Welcome to Nginx"></p><p>注意：</p><p>如果在浏览器中打不开网页，可能是被服务器的防火墙限制了。可以先关闭防火墙试试能否打开，如果关闭防火墙后能打开，可以永久开放80端口。</p><h3 id="步骤3：配置防火墙"><a href="#步骤3：配置防火墙" class="headerlink" title="步骤3：配置防火墙"></a>步骤3：配置防火墙</h3><p>Centos 7 永久开放80端口：</p><p>#查看防火墙状态</p><p>firewall-cmd –state</p><p>#关闭防火墙</p><p>systemctl stop firewalld.service</p><p>#打开防火墙</p><p>systemctl start firewalld.service</p><p>#永久开放80端口</p><p>firewall-cmd –zone=public –add-port=80/tcp –permanent</p><p>#更新防火墙规则</p><p>firewall-cmd –reload</p><p>Nginx详细启动参数参加：<a href="https://docsxyz.com/wiki/nginx/commandline" target="_blank" rel="noopener">https://docsxyz.com/wiki/nginx/commandline</a></p><p>转载 <a href="https://docsxyz.com/wiki/nginx/install" target="_blank" rel="noopener">https://docsxyz.com/wiki/nginx/install</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows - Clash for Windows 使用教程</title>
      <link href="/2020/06/12/windows-clash-for-windows-shi-yong-jiao-cheng/"/>
      <url>/2020/06/12/windows-clash-for-windows-shi-yong-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Clash 是一个使用 Go 语言编写，基于规则的跨平台代理软件核心程序。<br>Clash for Windows 是运行在 Windows 上的一图形化 Clash 分支。通过 Clash API 来配置和控制 Clash 核心程序，便于用户可视化操作和使用。</p><p>支持 SS / VMess 协议，不支持 SSR 。</p><p>整理教程时的系统环境：</p><p>Windows 10 1903<br>Clash for Windows 0.8.0</p><p>此文档适用于：<code>N3RO</code><br>文档中的某些内容可能随软件版本迭代而失效。</p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>可以访问 Github 地址进行下载：<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener">https://github.com/Fndroid/clash_for_windows_pkg/releases</a></p><p>或点击<a href="https://to.kache.moe/source/Clash.for.Windows.Setup.0.8.11.exe" target="_blank" rel="noopener">这里</a>从本站进行下载。</p><p>若使用 Chrome 浏览器下载 exe 文件，可能会提示不安全，请忽略此提示。</p><p>由于 Clash for Windows 没有任何有效的数字签名，因此 SmartScreen 可能会弹出提示，请点击“更多信息”，然后选择“仍要运行”。</p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><p>N3RO 用户请先在机场官网复制 <strong>Clash 订阅链接</strong>。</p><p>打开 Clash for Windows 应用程序，在左侧的标签页中选择 Profiles ， 在顶部输入您的 <strong>Clash 订阅链接</strong>，然后点击 Download 按钮。</p><p><img src="https://i.loli.net/2019/11/13/r4fvMDe82shTRlI.png" alt="1-订阅.png"></p><p>Clash for Windows 会自动拉取配置文件进行更新，如果一切顺利，你应当可以看到绿色提示信息「Success!」，并且可以看到一个新增的配置文件：</p><p><img src="https://i.loli.net/2019/11/13/TrBjWdKkcPG6NfQ.png" alt="2-订阅成功.png"></p><p>2-订阅成功.png</p><p>点击新增的配置文件来切换到该配置，然后点击「Proxies」标签页来切换接入点，将顶部的出站模式选择为「Rule」。<br>此模式下你的网络访问请求将通过 Clash for Winows 进行<strong>分流处理</strong>。</p><p><img src="https://i.loli.net/2019/11/13/yNwHQ5oxO9L7Zb2.png" alt="3-选择模式.png"></p><p>3-选择模式.png</p><p>在「Proxy」策略组中选择所想要使用的接入点。Proxy 策略组是用于访问国际网络的默认策略，在不进行其他修改的情况下，所有国际网络的访问都通过 Proxy 策略组中选择的接入点进行。</p><p>图中所示的策略组是编者根据实际需求配置的，故略有不同爱国。请以自己的实际情况为准。</p><p>返回到「General」部分，将「System Proxy」的开关更改为绿色或「On」状态即可开始使用。此外，如果您需要让 Clash for Windows 开机自启，可以将「Start with Windows」也更改为绿色或「On」。</p><p><img src="https://i.loli.net/2019/11/13/1zTZU385nsDYJfX.png" alt="4-打开代理.png"></p><p>4-打开代理.png</p><h2 id="视频版教程"><a href="#视频版教程" class="headerlink" title="视频版教程"></a>视频版教程</h2><h3 id="从订阅链接下载和更新节点"><a href="#从订阅链接下载和更新节点" class="headerlink" title="从订阅链接下载和更新节点"></a>从订阅链接下载和更新节点</h3><iframe width="560" height="315" src="https://to.kache.moe/shareimg/CFW/remote.mp4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" style="box-sizing: border-box;"></iframe><h3 id="本地拖拽YAML文件"><a href="#本地拖拽YAML文件" class="headerlink" title="本地拖拽YAML文件"></a>本地拖拽YAML文件</h3><p>在无法直接从软件里更新自己的订阅时，可以复制你的链接，直接粘贴到浏览器打开，然后复制全部的文本，在桌面新建一个文本文档（TXT格式），然后粘贴到文档里，保存后将文件的扩展名更改为 YAML 。然后直接拖拽到软件的 Proflies 界面。</p><p>这是一种曲线救国的方法。此方法导入的配置无法进行更新，需要更新时请重新来一遍。</p><iframe width="560" height="315" src="https://to.kache.moe/shareimg/CFW/local.mp4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" style="box-sizing: border-box;"></iframe><p><strong>简单的使用教程到这里就结束了 ，当前已经可以进行正常的科学上网</strong><br><strong>有兴趣的话可以接着了解下边的内容</strong></p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p>当配置文件存在错误时，无法在「Profiles」界面切换，请根据提示进行修改</p><p>若出现如图所示的情况，说明您未点击刚才新增的配置文件，请返回「Profiles」点击选择对应的配置文件</p><p><img src="https://i.loli.net/2019/11/13/sboh4U95aKXWDNw.png" alt="9-配置错误示例.png"></p><p>9-配置错误示例.png</p><h3 id="其它知识"><a href="#其它知识" class="headerlink" title="其它知识"></a>其它知识</h3><h4 id="Clash-for-Windows-界面简介"><a href="#Clash-for-Windows-界面简介" class="headerlink" title="Clash for Windows 界面简介"></a>Clash for Windows 界面简介</h4><p><img src="https://i.loli.net/2019/11/13/VD7ZNdQpLB6HlKm.png" alt="8-界面简介.png"></p><p>8-界面简介.png</p><ul><li><pre><code>General（常规）</code></pre><p>：</p><ul><li><code>Port</code>、<code>Socks Port</code>；分别为 HTTP、SOCKS 代理端口，点击终端图案可以打开一个配置了代理的命令行窗口，点击端口数字可以复制该命令；</li><li><code>Allow LAN</code>：启用局域网共享代理功能；‘</li><li><code>Log Level</code>：日志等级；</li><li><code>Home Directory</code>：点击下方路径直达 <code>C:\Users\用户名\.config\clash</code> 文件夹；</li><li><code>GeoIP Database</code>：点击下方日期可更新 GeoIP 数据库；</li><li><code>UWP Loopback</code> ：可以用来使 UWP 应用解除回环代理限制；</li><li><code>Tap Device</code> ：安装 cfw-tap 网卡，可用于处理不遵循系统代理的软件（实际启动 tap 模式需要更改配置文件）；</li><li><code>General YML</code>：编辑 <code>config.yml</code> 文件，可用于配置部分 <strong>General</strong> 页面内容；</li><li><code>Dark Theme</code>：控制暗色模式；</li><li><code>System Proxy</code>：启用系统代理；</li><li><code>Start with Windows</code>：设置开机自启；</li></ul></li><li><p><code>Proxies（代理）</code>：选择代理方式（Global - 全局、Rule - 规则、Direct - 直连）及策略组节点选择；</p></li><li><pre><code>Profiles（配置管理）</code></pre><p>：</p><ul><li>用来下载远端配置文件和创建本地副本，且可在多个配置文件间切换；</li><li>对配置进行节点、策略组和规则的管理（添加节点、策略组和规则在各自编辑界面选择 <code>Add</code>, 调整策略组顺序、节点顺序及策略组节点使用拖拽的方式）；</li></ul></li><li><p><code>Logs（日志）</code>：显示当前请求命中规则类型和策略；</p></li><li><p><code>Connections (连接)</code>: 显示当前的 TCP 连接，可对某个具体连接执行关闭操作；</p></li><li><p><code>Feedback（反馈）</code>：显示软件、作者等相关信息。</p></li></ul><h4 id="UWP-应用"><a href="#UWP-应用" class="headerlink" title="UWP 应用"></a>UWP 应用</h4><p>如需使用 UWP 应用，还需要点击「EnableLoopback」来为 UWP 应用启用本地回环代理。在 Windows 10 中，微软出于安全性考虑，不允许 UWP 应用访问本地回环地址，这导致 UWP 应用无法直接使用代理，需要其他工具来破除这一限制。</p><p>Clash for Windows 集成了 EnableLoopback 程序，只需要点击「UWP Loopback」就可以使用。</p><p><img src="https://i.loli.net/2019/11/13/jsaGxfKUCyFlArQ.png" alt="5-UWP应用.png"></p><p>5-UWP应用.png</p><p>打开后一般直接点击 Exempt All 勾选所有 UWP 应用，然后点击 Save Changes 即可。请注意安装新的 UWP 应用后需要重新设置。</p><p><img src="https://i.loli.net/2019/11/13/yJk5dBZjmbpVErW.png" alt="5-UWP应用2.png"></p><h4 id="更新-GeoIP-数据库"><a href="#更新-GeoIP-数据库" class="headerlink" title="更新 GeoIP 数据库"></a>更新 GeoIP 数据库</h4><p>在「General」界面点击「GeoIP Database」来更新 MaxMind 的 GeoIP2 Lite 数据库。此数据库用于 Geo 规则和 DNS 判断，建议每月至少更新一次。</p><p><img src="https://i.loli.net/2019/11/13/jNnBT42Whk1MzCU.png" alt="7-更新IP库.png"></p><p>7-更新IP库.png</p><h4 id="TAP-设备"><a href="#TAP-设备" class="headerlink" title="TAP 设备"></a>TAP 设备</h4><p>Clash for Windows 中提供了一个新的 TAP 模式。TAP 模式需要配置文件中设置为 fake-ip 模式。但此模式目前仍然存在问题导致可能出现不稳定情况。</p><h4 id="URL-Scheme"><a href="#URL-Scheme" class="headerlink" title="URL Scheme"></a>URL Scheme</h4><p>CFW支持使用URL Scheme快速导入配置文件：</p><pre><code>clash://install-config?url=&lt;encoded URI&gt;</code></pre><h4 id="便携模式"><a href="#便携模式" class="headerlink" title="便携模式"></a>便携模式</h4><p>版本要求：</p><p>从0.4.0开始，Clash for Windows提供简单的便携支持</p><p>使用方法：</p><p>进入[Release][11]页面下载最新后缀为<code>.zip或.7z</code>的免安装包并解压至希望安装的目录下（如移动硬盘、U盘等）</p><p>配置文件：</p><p>进入<code>安装目录/resources/static/files/</code>目录中进行如下操作：</p><ol><li>新建config.yml（文件可以为空，但一定要创建）</li><li>重新启动Clash for Windows</li></ol><p>此时文件夹目录中还有其他文件及文件夹，请勿对其修改。</p><p>启动及更新：</p><p>安装目录下Clash for Windows.exe即为软件入口，点击启动即可。</p><p>如需更新Clash for Windows，只需下载对应zip安装包，解压并覆盖至软件目录即可。</p><h3 id="其它常见问题"><a href="#其它常见问题" class="headerlink" title="其它常见问题"></a>其它常见问题</h3><p><strong>1.界面显示不全，无法操作</strong></p><p>删除 Home Directory 下 config.yml 文件并重启软件 如错误依旧，打开 logs 文件夹，选取最新日志文件分析</p><p><strong>2.升级后提示 xxx not found</strong></p><p>0.6.0 版本升级后，Clash 核心增加对规则部分的校验，如果策略不存在，则不再忽略而提示错误，根据错误信息检查配置文件并进行排除即可</p><p><strong>3.系统代理自动关闭或打开</strong></p><p>清除系统代理设置 如无法解决，则检查是否有其他安全/代理软件修改代理设置</p><p><strong>4.无法访问网页</strong></p><p>0.6.0 版本升级后，Clash 核心使用自定义 DNS 设置进行服务器及直连域名的解析，所以当日志中出现大量 All DNS Failed! 日志时，请重新设置合适的 DNS</p><p>如果不使用 TAP ，建议将 DNS 关闭</p><p><strong>5.TAP 无法安装</strong></p><p>检查是否已经安装其他 TAP 设备，若是，可以先在设备管理器中将其删除后重试</p><p><strong>6.安装0.7.4 之后版本首次使用时不显示接入点</strong></p><p>新版 Clash for Windows 在下载配置文件后并不会默认切换到新的配置文件（与旧版本不同），否则仍然使用的是默认配置文件。</p><p><strong>7.替换配置文件后不显示接入点</strong></p><p>这可能是因为 <code>Clash for Windows</code> 的基础配置文件 <code>config.yml</code> 被修改。要解决此问题，点击 <code>Clash for Windows General</code> 标签页上的 <code>Home Directory</code> 进入 <code>Clash for Windows</code> 配置目录，然后删除 <code>config.yml</code> 文件（不是 <code>config.yaml</code>），退出并重启打开 <code>Clash for Windows</code>，重新进行配置步骤。</p><blockquote><p>Last updated: 2020-02-15 18:29:11<br>这里可以写作者留言，标签和 hexo 中所有变量及辅助函数等均可调用，示例：<a href="https://wiki.kache.moe/2019/11/21/Windows-CFW/" target="_blank" rel="noopener">http://wiki.kache.moe/2019/11/21/Windows-CFW/</a></p><p>转载自以上链接</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> clash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android - Surfboard 使用教程</title>
      <link href="/2020/06/12/android-surfboard-shi-yong-jiao-cheng/"/>
      <url>/2020/06/12/android-surfboard-shi-yong-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="Android-Surfboard-使用教程"><a href="#Android-Surfboard-使用教程" class="headerlink" title="Android - Surfboard 使用教程"></a>Android - Surfboard 使用教程</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Surfboard 是一款运行在 Android 系统上的网络代理工具，兼容 Surge 2 配置，可以直接将 Surge 2 标准的配置文件导入使用。</p><p>支持 SS 协议，不支持 SSR 和 V2Ray 。</p><h3 id="此教程整理时的系统环境："><a href="#此教程整理时的系统环境：" class="headerlink" title="此教程整理时的系统环境："></a>此教程整理时的系统环境：</h3><p>Android 9, Color OS V6.0</p><p>Surfboard 1.0.3 (Build 54)</p><p>此文档适用于：<code>N3RO</code><br>N3RO 机场用户需要自行转换为 Surfboard 接受的订阅格式。<br>详情请看机场官网用户中心快速导入区域。<br>文档中的某些内容可能随软件版本迭代而失效。</p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>请点击<a href="https://to.kache.moe/source/Surfboard-1.0.3.apk" target="_blank" rel="noopener">这里</a>以下载最新的Surfboard软件。</p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><p>软件提供了多种配置导入方法，进入 Profile 页面：</p><ul><li>可以填入 URL 导入</li><li>也可以下载配置文件后，选择导入本地文件</li></ul><p>导入后，在 Config 页面会出现节点列表，选择你想要使用的节点即可。</p><p><strong>具体步骤如下:</strong></p><p>首先请登陆机场官网，复制 Surfboard 订阅链接。</p><p>请打开软件。进入 Profiles 页面。请点击右下角加号，然后选择 Download form url 。</p><p>请在弹出的新窗口中粘贴刚刚复制的订阅链接。</p><p><img src="https://merlinblog.oss-cn-hongkong.aliyuncs.com/Surfboard%E6%95%99%E7%A8%8B/IMG_7282.jpg" alt="1"> <img src="https://merlinblog.oss-cn-hongkong.aliyuncs.com/Surfboard%E6%95%99%E7%A8%8B/IMG_7283.jpg" alt="2"></p><p>请点击右下角 Download 。此时软件会开始从远端服务器下载您的配置文件。</p><p>等待若干秒后，您将在此页面看到您添加的配置文件。</p><p><img src="https://merlinblog.oss-cn-hongkong.aliyuncs.com/Surfboard%E6%95%99%E7%A8%8B/IMG_7281.jpg" alt="3"></p><p>请点击选中此卡片。然后点击下方的 Config 。您将在这个页面看到策略组面板。</p><p><img src="https://merlinblog.oss-cn-hongkong.aliyuncs.com/Surfboard%E6%95%99%E7%A8%8B/IMG_7277.jpg" alt="4"></p><p>请点开 Proxy 策略组。在其中选择一个节点。（可点击右上角 Test Latency 进行延迟测试并选中一个延迟较低的节点）</p><p>一般配置文件中会有 Auto 策略，若在 Proxy 策略组中选中 Auto，那么可以实现的效果是：每隔一段时间，软件将进行延迟测试并自动切换到延迟最低的节点。（ Use at your own risk ）</p><p><img src="https://merlinblog.oss-cn-hongkong.aliyuncs.com/Surfboard%E6%95%99%E7%A8%8B/IMG_7278.jpg" alt="5"></p><p>此时可以点击左下角的 Switch 按钮，然后点击右下角粉色的启动按钮。</p><p>初次启动会建立 VPN 隧道，请点击允许。</p><p><img src="https://merlinblog.oss-cn-hongkong.aliyuncs.com/Surfboard%E6%95%99%E7%A8%8B/IMG_7275.jpg" alt="6"> <img src="https://merlinblog.oss-cn-hongkong.aliyuncs.com/Surfboard%E6%95%99%E7%A8%8B/IMG_7276.jpg" alt="7"></p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><h3 id="如何更新订阅："><a href="#如何更新订阅：" class="headerlink" title="如何更新订阅："></a>如何更新订阅：</h3><p>请进入 Profile 界面，长按配置文件的卡片。然后选择 Check update 。</p><p><img src="https://merlinblog.oss-cn-hongkong.aliyuncs.com/Surfboard%E6%95%99%E7%A8%8B/IMG_7279.jpg" alt="8"></p><h3 id="已知的问题"><a href="#已知的问题" class="headerlink" title="已知的问题"></a>已知的问题</h3><p>Android Q 已知 AOSP 源码存在 fd 泄漏的 bug ，使用 Surfboard 一段时间直接导致系统重启，无法在 APP 侧修复，只能等待系统更新，请在 Android Q 上谨慎使用。</p><blockquote><p>Last updated: 2020-02-12 23:30:18<br>这里可以写作者留言，标签和 hexo 中所有变量及辅助函数等均可调用，示例：<a href="https://wiki.kache.moe/2019/11/22/Andoird-Surfboard/" target="_blank" rel="noopener">http://wiki.kache.moe/2019/11/22/Andoird-Surfboard/</a></p></blockquote><p>转载自以上链接！</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> surfboard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Trojan+CDN Trojan-Go安装 隐藏VPS IP</title>
      <link href="/2020/06/05/trojan-cdn-trojan-go-an-zhuang-yin-cang-vps-ip/"/>
      <url>/2020/06/05/trojan-cdn-trojan-go-an-zhuang-yin-cang-vps-ip/</url>
      
        <content type="html"><![CDATA[<p>Trojan-Go套用CDN、隐藏VPS真实IP、开启websocket、多路复用提升网页打开速度！Trojan-Go安装脚本（可救被墙的VPS）</p><p>Trojan-Go的官方说明：</p><blockquote><p>使用Go实现的完整Trojan代理，与Trojan协议以及Trojan-GFW版本的配置文件格式兼容。安全，高效，轻巧，易用。</p><p>支持使用多路复用提升并发性能，使用路由模块实现国内直连。</p><p>支持CDN流量中转(基于WebSocket over TLS/SSL)。</p><p>支持基于ACME协议从Let’s Encrypt自动申请和更新HTTPS证书，只需提供域名和邮箱。</p></blockquote><p>Trojan-Go GitHub项目地址：<a href="https://www.v2rayssr.com/go?url=https://github.com/p4gefau1t/trojan-go" target="_blank" rel="noopener">点击访问</a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1、VPS一台重置主流的系统</p><p>2、崭新的二级域名一个并托管cloudflare</p><p>3、可申请为期一年的证书（可选操作）</p><blockquote><p><strong>注意事项：</strong>若是需要Trojan套用CDN，也就是必须开启 websocket ，若是开启 websocket ，就需要客户端支持，目前支持的客户端有：</p><p>Windows/MacOS平台 ：Trojan-Qt5</p><p><a href="https://www.v2rayssr.com/go?url=https://github.com/Trojan-Qt5/Trojan-Qt5/releases" target="_blank" rel="noopener">直达下载</a>  <a href="https://www.v2rayssr.com/go?url=https://github.com/Trojan-Qt5/Trojan-Qt5" target="_blank" rel="noopener">项目地址</a></p><p>Android 安卓平台： Igniter-Go</p><p><a href="https://www.v2rayssr.com/go?url=https://github.com/trojan-gfw/igniter/releases" target="_blank" rel="noopener">直达下载</a>  <a href="https://www.v2rayssr.com/go?url=https://github.com/trojan-gfw/igniter" target="_blank" rel="noopener">项目地址</a></p><p>IOS 苹果手机：<strong>暂时不支持</strong></p></blockquote><h2 id="搭建Trojan-Go"><a href="#搭建Trojan-Go" class="headerlink" title="搭建Trojan-Go"></a>搭建Trojan-Go</h2><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="1、连接VPS并安装必要组件"><a href="#1、连接VPS并安装必要组件" class="headerlink" title="1、连接VPS并安装必要组件"></a>1、连接VPS并安装必要组件</h3><p><strong>PS：自行关闭防火墙，放行80/443端口</strong></p><p>CentOS 运行如下命令</p><pre><code>yum update -yyum install unzip -yyum install wget -yyum install nginx -y</code></pre><p>DeBian / Ubuntu 运行如下命令</p><pre><code>apt update -yapt install unzip -yapt install wget -yapt install nginx -y</code></pre><h3 id="2、检查-NGINX-是否安装成功"><a href="#2、检查-NGINX-是否安装成功" class="headerlink" title="2、检查 NGINX 是否安装成功"></a>2、检查 NGINX 是否安装成功</h3><p>在浏览器输入绑定到VPS的域名验证 图片省略 下同</p><p>PS：在申请到证书之前，请保持域名 <strong>未开启CDN</strong> </p><h3 id="3、部署官方Trojan-Go程序"><a href="#3、部署官方Trojan-Go程序" class="headerlink" title="3、部署官方Trojan-Go程序"></a>3、部署官方Trojan-Go程序</h3><p>输入如下命令下载官方trojan-go程序。</p><pre><code>wget https://github.com/p4gefau1t/trojan-go/releases/download/v0.5.1/trojan-go-linux-amd64.zip</code></pre><p>解压刚才下载的程序包至 /etc 目录</p><pre><code>unzip trojan-go-linux-amd64.zip -d /etc/trojan-go</code></pre><h3 id="4、申请证书或放置证书"><a href="#4、申请证书或放置证书" class="headerlink" title="4、申请证书或放置证书"></a>4、申请证书或放置证书</h3><p><code>cd /etc/trojan-go</code>进入 /etc/trojan-go 目录， 用Trojan-Go申请证书，或是自行放置证书</p><pre><code>./trojan-go -autocert request</code></pre><p>分别输入：y/你的域名/你的邮箱（不需要验证）/y ，申请完毕如下图（请比对文件夹里面的文件）</p><p>PS：若是域名输入错误，需要再次运行则需删除 <code>/etc/trojan-go/domain_info.json</code> 文件。</p><h3 id="5、配置Trojan-Go"><a href="#5、配置Trojan-Go" class="headerlink" title="5、配置Trojan-Go"></a>5、配置Trojan-Go</h3><p>1、修改服务器配置文件和增加自启动文件</p><pre><code>cp /etc/trojan-go/example/server.json /etc/trojan-go</code></pre><p>2、复制 trojan-go.service 到 /etc/systemd/system</p><pre><code>cp /etc/trojan-go/example/trojan-go.service /etc/systemd/system</code></pre><p>3、找到 /etc/systemd/system/trojan-go.service 文件，修改里面的代码和参数为：</p><pre><code>[Unit]Description=Trojan-Go - An unidentifiable mechanism that helps you bypass GFWDocumentation=https://github.com/p4gefau1t/trojan-goAfter=network.target nss-lookup.targetWants=network-online.target[Service]Type=simpleUser=rootExecStart=/etc/trojan-go/trojan-go -config /etc/trojan-go/server.jsonRestart=on-failureRestartSec=10RestartPreventExitStatus=23[Install]WantedBy=multi-user.target</code></pre><p>4、修改 /etc/trojan-go/server.json 服务器配置文件，如下为范本，里面有多处地方需要修改（最基本的<strong>五处</strong>汉字必须修改）</p><p>官方完整服务器配置文件：<a href="https://www.v2rayssr.com/go?url=https://p4gefau1t.github.io/trojan-go/basic/full-config/" target="_blank" rel="noopener">点击访问</a></p><pre><code>{  &quot;run_type&quot;: &quot;server&quot;,  &quot;local_addr&quot;: &quot;0.0.0.0&quot;,  &quot;local_port&quot;: 443,  &quot;remote_addr&quot;: &quot;127.0.0.1&quot;,  &quot;remote_port&quot;: 80,  &quot;log_level&quot;: 1,  &quot;log_file&quot;: &quot;/etc/trojan-go/test.log&quot;,  &quot;password&quot;: [       &quot;你的密码&quot;  ],  &quot;buffer_size&quot;: 32,  &quot;dns&quot;: [],  &quot;ssl&quot;: {    &quot;verify&quot;: true,    &quot;verify_hostname&quot;: true,      &quot;cert&quot;: &quot;/etc/trojan-go/server.crt&quot;,      &quot;key&quot;: &quot;/etc/trojan-go/server.key&quot;,    &quot;key_password&quot;: &quot;&quot;,    &quot;cipher&quot;: &quot;&quot;,    &quot;cipher_tls13&quot;: &quot;&quot;,    &quot;curves&quot;: &quot;&quot;,    &quot;prefer_server_cipher&quot;: false,     &quot;sni&quot;: &quot;你绑定的域名&quot;,    &quot;alpn&quot;: [      &quot;http/1.1&quot;    ],    &quot;session_ticket&quot;: true,    &quot;reuse_session&quot;: true,    &quot;plain_http_response&quot;: &quot;&quot;,    &quot;fallback_port&quot;: 1234,    &quot;fingerprint&quot;: &quot;firefox&quot;,    &quot;serve_plain_text&quot;: false  },  &quot;tcp&quot;: {    &quot;no_delay&quot;: true,    &quot;keep_alive&quot;: true,    &quot;reuse_port&quot;: false,    &quot;prefer_ipv4&quot;: false,    &quot;fast_open&quot;: false,    &quot;fast_open_qlen&quot;: 20  },  &quot;mux&quot;: {    &quot;enabled&quot;: true,    &quot;concurrency&quot;: 8,    &quot;idle_timeout&quot;: 60  },  &quot;router&quot;: {    &quot;enabled&quot;: false,    &quot;bypass&quot;: [],    &quot;proxy&quot;: [],    &quot;block&quot;: [],    &quot;default_policy&quot;: &quot;proxy&quot;,    &quot;domain_strategy&quot;: &quot;as_is&quot;,    &quot;geoip&quot;: &quot;/etc/trojan-go/geoip.dat&quot;,    &quot;geosite&quot;: &quot;/etc/trojan-go/geosite.dat&quot;  },  &quot;websocket&quot;: {    &quot;enabled&quot;: true,    &quot;path&quot;: &quot;/你的路径&quot;,    &quot;hostname&quot;: &quot;你绑定的域名&quot;,    &quot;obfuscation_password&quot;: &quot;&quot;,    &quot;double_tls&quot;: true,    &quot;ssl&quot;: {      &quot;verify&quot;: true,      &quot;verify_hostname&quot;: true,      &quot;cert&quot;: &quot;/etc/trojan-go/server.crt&quot;,      &quot;key&quot;: &quot;/etc/trojan-go/server.key&quot;,      &quot;key_password&quot;: &quot;&quot;,      &quot;prefer_server_cipher&quot;: false,      &quot;sni&quot;: &quot;你绑定的域名&quot;,      &quot;session_ticket&quot;: true,      &quot;reuse_session&quot;: true,      &quot;plain_http_response&quot;: &quot;&quot;    }  }}</code></pre><p>5、以上参数的简单说明:</p><pre><code>&quot;websocket&quot;` 默认开启，关闭请 `&quot;enabled&quot;: false,</code></pre><p>若是不关闭，则只能使用包含 Trojan-GO 协议的客户端。但是关闭则无法套用CDN</p><p><code>&quot;obfuscation_password&quot;: &quot;&quot;</code>, 为 websocket 混淆密码，填写会稍稍影响性能，默认为空</p><pre><code>&quot;mux&quot;` 为多路复用，默认开启，关闭请 `&quot;enabled&quot;: false,&quot;double_tls&quot;:` 为多重TLS，默认开启，关闭请 `&quot;double_tls&quot;: false,</code></pre><h3 id="6、开启CDN，并设置CDN"><a href="#6、开启CDN，并设置CDN" class="headerlink" title="6、开启CDN，并设置CDN"></a>6、开启CDN，并设置CDN</h3><p>1、点亮小云朵，开启CDN</p><p>2、点击页面中的 SSL/TLS 进入如下界面并设置（<strong>重要</strong>）</p><h3 id="7、设置Trojan-Go开机启动"><a href="#7、设置Trojan-Go开机启动" class="headerlink" title="7、设置Trojan-Go开机启动"></a>7、设置Trojan-Go开机启动</h3><p>首先 <code>systemctl daemon-reload</code> ，然后 <code>systemctl enable trojan-go</code> 设置为开机自启，在然后 <code>systemctl start trojan-go</code> 启动 Trojan-Go。<code>systemctl status trojan-go</code> 可以查看 Trojan-Go 状态</p><h3 id="8、验证Trojan-Go是否正常"><a href="#8、验证Trojan-Go是否正常" class="headerlink" title="8、验证Trojan-Go是否正常"></a>8、验证Trojan-Go是否正常</h3><p>以下引用官方文档：</p><p>当一个客户端试图连接Trojan-Go的监听端口时，会发生下面的事情：</p><ul><li>如果TLS握手成功，检测到TLS的内容非Trojan协议（有可能是HTTP请求，或者来自GFW的主动探测）。Trojan-Go将TLS连接代理到本地127.0.0.1:80上的HTTP服务。这时在远端看来，Trojan-Go服务就是一个HTTPS网站。</li><li>如果TLS握手成功，并且被确认是Trojan协议头部，并且其中的密码正确，那么服务器将解析来自客户端的请求并进行代理，否则和上一步的处理方法相同。</li><li>如果TLS握手失败，说明对方使用的不是TLS协议进行连接。此时Trojan-Go将这个TCP连接代理到本地127.0.0.1:1234上运行的HTTPS服务，返回一个展示400 Bad Reqeust的HTTP页面。<code>fallback_port</code>是一个可选选项，如果没有填写，Trojan-Go会直接终止连接。虽然是可选的，但是还是强烈建议填写。</li></ul><p>你可以通过使用浏览器访问你的域名<code>https://your-domain-name.com</code>来验证。如果工作正常，你的浏览器会显示一个正常的HTTPS保护的Web页面，页面内容与服务器本机80端口上的页面一致。</p><h3 id="9、连接Trojan-Go"><a href="#9、连接Trojan-Go" class="headerlink" title="9、连接Trojan-Go"></a>9、连接Trojan-Go</h3><p>trojan-qt5  </p><h3 id="10、设置伪装站点"><a href="#10、设置伪装站点" class="headerlink" title="10、设置伪装站点"></a>10、设置伪装站点</h3><p>PS：等部署完毕，确定没问题了在进行站点伪装</p><p>找到VPS文件 <code>/etc/nginx/nginx.conf</code> 打开，并贴入一下代码，其中文字部分需替换 （一处替换）</p><pre><code>user  root;worker_processes  1;error_log  /var/log/nginx/error.log warn;pid        /var/run/nginx.pid;events {    worker_connections  1024;}http {    include       /etc/nginx/mime.types;    default_type  application/octet-stream;    log_format  main  &#39;\$remote_addr - \$remote_user [\$time_local] &quot;\$request&quot; &#39;                      &#39;\$status \$body_bytes_sent &quot;\$http_referer&quot; &#39;                      &#39;&quot;\$http_user_agent&quot; &quot;\$http_x_forwarded_for&quot;&#39;;    access_log  /var/log/nginx/access.log  main;    sendfile        on;    #tcp_nopush     on;    keepalive_timeout  120;    client_max_body_size 20m;    #gzip  on;    server {        listen       80;        server_name  你的域名;        root /usr/share/nginx/html;        index index.php index.html index.htm;        }}</code></pre><p>然后找到网站根目录 <code>/usr/share/nginx/html</code> ，下载并解压源码。</p><pre><code>cd /usr/share/nginx/htmlwget https://github.com/V2RaySSR/Trojan/raw/master/web.zipunzip web.zipsystemctl restart nginx</code></pre><p>伪装站点千篇一律？以下模板下载地址：<a href="https://www.v2rayssr.com/go?url=https://templated.co" target="_blank" rel="noopener">点击访问</a></p><h3 id="11、自行安装BBR加速"><a href="#11、自行安装BBR加速" class="headerlink" title="11、自行安装BBR加速"></a>11、自行安装BBR加速</h3><p>BBR加速四合一脚本：<a href="https://www.v2rayssr.com/bbr.html" target="_blank" rel="noopener">点击直达</a></p><h3 id="12、证书更新"><a href="#12、证书更新" class="headerlink" title="12、证书更新"></a>12、证书更新</h3><p>命令为：<code>./trojan-go -autocert renew</code></p><p>引用官方说明：</p><ul><li>server.key 服务器私钥</li><li>server.crt 经过Let’s Encrypt签名的服务器证书</li><li>user.key 用户Email对应的私钥</li><li>domain_info.json 域名和用户Email信息</li></ul><p>进行证书更新。更新之前请确保同目录下有上述的四个文件。如果你没有指定ACME challenge使用的端口，Trojan-Go将默认使用443和80端口，请确保这两个端口没有被Trojan-Go或者其他程序（nginx, caddy等等）占用。</p><p>简单来说，就是 <code>systemctl stop nginx</code> 、 <code>systemctl stop trojan-go</code> 、<code>./trojan-go -autocert renew</code> 、更新成功以后 <code>systemctl start trojan-go</code> 、 <code>systemctl start nginx</code></p><h3 id="13、如何关闭-websocket-用其他客户端连接。"><a href="#13、如何关闭-websocket-用其他客户端连接。" class="headerlink" title="13、如何关闭 websocket ,用其他客户端连接。"></a>13、如何关闭 websocket ,用其他客户端连接。</h3><p>修改 /etc/trojan-go/server.json 服务器配置文件</p><pre><code>{    &quot;run_type&quot;: &quot;server&quot;,    &quot;local_addr&quot;: &quot;0.0.0.0&quot;,    &quot;local_port&quot;: 443,    &quot;remote_addr&quot;: &quot;127.0.0.1&quot;,    &quot;remote_port&quot;: 80,    &quot;password&quot;: [        &quot;你的密码&quot;    ],    &quot;ssl&quot;: {        &quot;cert&quot;: &quot;/etc/trojan-go/server.crt&quot;,        &quot;key&quot;: &quot;/etc/trojan-go/server.key&quot;,        &quot;sni&quot;: &quot;你的域名&quot;,        &quot;fallback_port&quot;: 1234    }}</code></pre><p><code>systemctl restart trojan-go</code> 重启 Trojan-Go。<code>systemctl status trojan-go</code> 可以查看 Trojan-Go 状态</p><p><a href="https://www.v2rayssr.com/trojan-go.html" target="_blank" rel="noopener">https://www.v2rayssr.com/trojan-go.html</a>  原文链接 大陆禁访问</p>]]></content>
      
      
      <categories>
          
          <category> 转载记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> trojan </tag>
            
            <tag> trojan-go </tag>
            
            <tag> CDN </tag>
            
            <tag> vps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSPanel-Uim v2ray-poseidon docker 后端对接</title>
      <link href="/2020/06/05/sspanel-uim-v2ray-poseidon-docker-hou-duan-dui-jie/"/>
      <url>/2020/06/05/sspanel-uim-v2ray-poseidon-docker-hou-duan-dui-jie/</url>
      
        <content type="html"><![CDATA[<p>SSPanel-Uim    v2ray-poseidon 后端对接  </p><h2 id="v2ray-poseidon"><a href="#v2ray-poseidon" class="headerlink" title="v2ray-poseidon"></a>v2ray-poseidon</h2><p>v2ray-poseidon能对接 SSPanel 跟 v2board ，有分社区版跟商业版。这两种版本的区别就是前者只能 50 个用户以下使用，后者无限制。<br> <a href="https://www.54fxp.top/go?url=https://github.com/ColetteContreras/v2ray-poseidon/wiki/0202-对接-SSPanel-教程" target="_blank" rel="noopener">官方文档</a></p><p>准备工作就是CF解析域名。打开VPS。</p><h2 id="修改-SSPanel-代码"><a href="#修改-SSPanel-代码" class="headerlink" title="修改 SSPanel 代码"></a>修改 SSPanel 代码</h2><p>我的是master 分支</p><blockquote><p>master 分支的代码<br> 删除掉 app/Middleware/Mod_Mu.php 的 33 到 39 行的内容 <a href="https://www.54fxp.top/go?url=https://github.com/Anankke/SSPanel-Uim/blob/master/app/Middleware/Mod_Mu.php#L33-L39" target="_blank" rel="noopener">https://github.com/Anankke/SSPanel-Uim/blob/master/app/Middleware/Mod_Mu.php#L33-L39</a></p></blockquote><h2 id="方式一-在-docker-中运行-v2ray-poseidon"><a href="#方式一-在-docker-中运行-v2ray-poseidon" class="headerlink" title="方式一 在 docker 中运行 v2ray-poseidon"></a>方式一 在 docker 中运行 v2ray-poseidon</h2><p>本文使用这种方式。<br> <strong>安装 docker 和 docker-compose</strong></p><pre><code>curl -fsSL https://get.docker.com | bash` `curl -L  &quot;https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose` `chmod a+x /usr/local/bin/docker-compose` `rm -rf `which dc`` `ln -s /usr/local/bin/docker-compose /usr/bin/dc` `git clone https://github.com/ColetteContreras/v2ray-poseidon.git` `cd /root/v2ray-poseidon/docker/sspanel/ws-tls</code></pre><p><strong>修改 config.json</strong></p><p>nodeId ：节点 Id<br> panelUrl ：$_ENV[‘baseUrl’]<br> panelKey ：$_ENV[‘muKey’]</p><p><strong>修改 docker-compose.yml</strong></p><p>CF_API_EMAIL=你的 Cloudflare 邮箱<br> CF_API_KEY=你的 Cloudflare Global API Key<br> command: tls cloudflare 域名 ，并删掉前面的 #</p><h2 id="SSPANEL里新建节点"><a href="#SSPANEL里新建节点" class="headerlink" title="SSPANEL里新建节点"></a>SSPANEL里新建节点</h2><p>WS + TLS<br> <code>域名;443;2;tls;ws;path=/|host=域名</code></p><h2 id="最后启动"><a href="#最后启动" class="headerlink" title="最后启动"></a>最后启动</h2><pre><code>dc up -d` 我测试时，使用TCP，节点绿色，联网不成功，换端口还是一样，未解决。 使用过TCP DC UP的，会报错，只需要停止就可以了 `docker-compose stop</code></pre><p>另外，好多报错啥的，查看官方文档，自己google，我这小白水平，有问题任何人都是搜索解决问题一般。</p><h2 id="最后测试"><a href="#最后测试" class="headerlink" title="最后测试"></a>最后测试</h2><p>订阅或者复制节点链接，OK，速度很快，其它可以考虑加速脚本。</p><hr><p>靓时代网站<a href="http://www.54fxp.top版权所有丨原创推荐分类中内容，均为原创丨本网站采用[BY-NC-SA](https://www.54fxp.top/go?url=http://creativecommons.org/licenses/by-nc-sa/3.0/)协议进行授权">www.54fxp.top版权所有丨原创推荐分类中内容，均为原创丨本网站采用[BY-NC-SA](https://www.54fxp.top/go?url=http://creativecommons.org/licenses/by-nc-sa/3.0/)协议进行授权</a><br>转载请注明原文链接：<a href="https://www.54fxp.top/940.html" target="_blank" rel="noopener">SSPanel-Uim  v2ray-poseidon docker 后端对接</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> v2ray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>django-sspanel docker 安装教程</title>
      <link href="/2020/06/05/django-sspanel-docker-an-zhuang-jiao-cheng/"/>
      <url>/2020/06/05/django-sspanel-docker-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>根据自己的系统<br> 这里是centos 7 64<br> 先</p><blockquote><p>yum update -y<br> yum install -y curl vim wget  git</p></blockquote><p>安装docker 和 docker-compose</p><blockquote><p>curl -fsSL <a href="https://www.54fxp.top/go?url=https://get.docker.com" target="_blank" rel="noopener">https://get.docker.com</a> | bash<br> curl -L “<a href="https://www.54fxp.top/go?url=https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname" target="_blank" rel="noopener">https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname</a> -s)-$(uname -m)” -o /usr/local/bin/docker-compose<br> chmod a+x /usr/local/bin/docker-compose<br> # 创建个软链接，以后用 dc 命令来代替 docker-compose<br> rm -rf <code>which dc</code>  # 若系统中存在 dc 则删除，这个 dc 就是个计算器，完全没有用<br> ln -s /usr/local/bin/docker-compose /usr/bin/dc</p></blockquote><h2 id="下载django-sspanel-源码"><a href="#下载django-sspanel-源码" class="headerlink" title="下载django-sspanel 源码"></a>下载django-sspanel 源码</h2><pre><code>git clone https://github.com/Ehco1996/django-sspanel.git</code></pre><p><strong>进入项目根目录</strong><br> <code>cd django-sspanel</code></p><p># 收集静态资源<br> <code>docker-compose run --rm web python manage.py collectstatic --noinput</code></p><p># 创建数据库表<br> <code>docker-compose run --rm web python manage.py migrate</code></p><p># 创建超级用户账号<br> <code>docker-compose run --rm web python manage.py create_admin --email &quot;admin@ss.com&quot; --username &quot;admin1&quot; --password &quot;adminadmin&quot;</code></p><p># 开启程序并放在后台运行<br> <code>docker-compose up -d</code></p><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><pre><code>systemctl enable dockersystemctl start docker</code></pre><p>django-sspanel/configs里<br> <strong>自行修改配置！</strong><br> <strong>自行修改配置！</strong><br> <strong>自行修改配置！</strong></p><h2 id="常见错误及解决"><a href="#常见错误及解决" class="headerlink" title="常见错误及解决"></a>常见错误及解决</h2><p>提示internal  server error 等等</p><p>您暂时无权查看此隐藏内容！</p><p><strong>本站 搭建的演示站点：</strong></p><p><a href="https://www.54fxp.top/go?url=http://www.fxpjc.xyz/" target="_blank" rel="noopener">http://www.fxpjc.xyz/</a></p><p><a href="https://www.54fxp.top/go?url=https://imgchr.com/i/YB6jZn" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/05/14/YB6jZn.md.png" alt="django-sspanel docker 安装教程"></a></p><p>以上隐藏内容查看价格为100靓时代币<a href="https://www.54fxp.top/wp-content/plugins/erphpdown/icealipay-pay-center.php?postid=946" target="_blank" rel="noopener">立即购买</a></p><p>1元等于10靓时代币。购买流程：1.首先登录本站（可微信QQ登录，可注册账号邮箱验证登录）2.登录状态，点 绿色 立即购买，余额有靓时代币直接支付；否则 点击充值  进入个人中心页面，可以充值卡充值，充值卡购买地址：<a href="https://xp.rsgdxp.com，可以使用微信扫码支付、支付宝WEB支付；充值包月会员等更优惠！" target="_blank" rel="noopener">https://xp.rsgdxp.com，可以使用微信扫码支付、支付宝WEB支付；充值包月会员等更优惠！</a></p><hr><p>靓时代网站<a href="http://www.54fxp.top版权所有丨原创推荐分类中内容，均为原创丨本网站采用[BY-NC-SA](https://www.54fxp.top/go?url=http://creativecommons.org/licenses/by-nc-sa/3.0/)协议进行授权">www.54fxp.top版权所有丨原创推荐分类中内容，均为原创丨本网站采用[BY-NC-SA](https://www.54fxp.top/go?url=http://creativecommons.org/licenses/by-nc-sa/3.0/)协议进行授权</a><br>转载请注明原文链接：<a href="https://www.54fxp.top/946.html" target="_blank" rel="noopener">django-sspanel docker 安装教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> sspanel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>v2board 网络加速</title>
      <link href="/2020/06/05/v2board-wang-luo-jia-su/"/>
      <url>/2020/06/05/v2board-wang-luo-jia-su/</url>
      
        <content type="html"><![CDATA[<h1 id="网络加速-科学上网"><a href="#网络加速-科学上网" class="headerlink" title="网络加速 | 科学上网"></a>网络加速 | 科学上网</h1><h2 id="★★★-FXP机场-V2Board以及本站欢迎您！"><a href="#★★★-FXP机场-V2Board以及本站欢迎您！" class="headerlink" title="★★★ |FXP机场|V2Board以及本站欢迎您！"></a>★★★ <strong><a href="http://www.fxp888.top/" target="_blank" rel="noopener">|FXP机场</a><a href="https://v2.rsgdxp.com/" target="_blank" rel="noopener">|V2Board</a>以及本站欢迎您！</strong></h2><p>本站加速技术只用于网上查询资料，跨区域注册，浏览健康视频等。违规滥用秒删除。</p><p>Github永久地址发布页，永久防失联地址：<a href="https://github.com/rsgdxp/54fxptop/wiki" target="_blank" rel="noopener">https://github.com/rsgdxp/54fxptop/wiki</a></p><p><a href="https://rsgdxp.github.io/">https://rsgdxp.github.io/</a></p><p>或者记住<a href="https://www.54fxp.top/" target="_blank" rel="noopener">https://www.54fxp.top/</a> 、<a href="https://faka.54fxp.top/" target="_blank" rel="noopener">https://faka.54fxp.top/</a> 站点即可！！！</p><p>欢迎体验本站 V2ray V2BOARD机场平台 <a href="https://v2.rsgdxp.com" target="_blank" rel="noopener">https://v2.rsgdxp.com</a><br>此平台全部为v2ray节点，请用v2ray客户端连接使用（如要使用其它协议，建议按教程提供的地址转换测试使用）系统稳定完善，连接方式更为安全有效，建议使用此平台！优惠利好详情请登录查看了解。谢谢支持！</p><p>请不要破坏我的这些站点，谢谢</p><p>一个生命没有比心灵的自由快乐更为重要的事！<br>只是处于爱好折腾而已，有问题请联系我，喜欢请分享转发！<br>欢迎合作 交流 一起进步</p><p>再次谢谢您</p><h2 id="若能一切随他去，便是世间自在人。"><a href="#若能一切随他去，便是世间自在人。" class="headerlink" title="若能一切随他去，便是世间自在人。"></a>若能一切随他去，便是世间自在人。</h2>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v2board </tag>
            
            <tag> 网络加速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为v2board 添加电报、TG</title>
      <link href="/2020/06/03/wei-v2board-tian-jia-dian-bao-tg/"/>
      <url>/2020/06/03/wei-v2board-tian-jia-dian-bao-tg/</url>
      
        <content type="html"><![CDATA[<p>前些天更新1.3版本后，发现添加了绑定电报|Telegram选项，随后测试添加了，进行</p><blockquote><p><strong>第二步</strong><br>配置完成第一步后点击V2Board后台管理-&gt;Telegram-&gt;一键设置</p></blockquote><p>时报错 server error ，当时没有解决。今天无意电报群里看到了，官方更新了 DOC文档</p><p><a href="http://docs.v2board.com/use/telegram.html" target="_blank" rel="noopener">http://docs.v2board.com/use/telegram.html</a></p><p>得来不费功夫的，一分钟不到解决了。测试试用了，查询流量等功能，绑定电报功能，还不错！</p><h1 id="Telegram"><a href="#Telegram" class="headerlink" title="Telegram"></a>Telegram</h1><p>V2Board内置Telegram功能介绍。</p><h3 id="如何配置"><a href="#如何配置" class="headerlink" title="如何配置"></a>如何配置</h3><p><strong>第一步</strong><br>Telegram联系@botfather创建机器人Token，创建后填入V2Board后台管理-&gt;Telegram-&gt;机器人Token</p><p><strong>第二步</strong><br>配置完成第一步后点击V2Board后台管理-&gt;Telegram-&gt;一键设置</p><p><strong>第三步</strong><br>V2Board后台管理-&gt;Telegram-&gt;开启机器人通知</p><h3 id="支持指令"><a href="#支持指令" class="headerlink" title="支持指令"></a>支持指令</h3><table><thead><tr><th align="left">指令</th><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">/help</td><td align="left">无</td><td align="left">获取帮助信息，未匹配到指令时默认触发该指令</td></tr><tr><td align="left">/traffic</td><td align="left">无</td><td align="left">查看流量信息</td></tr><tr><td align="left">/bind</td><td align="left">订阅地址</td><td align="left">绑定Telegram</td></tr></tbody></table><h3 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h3><table><thead><tr><th align="left">通知项目</th><th align="left">是否支持</th></tr></thead><tbody><tr><td align="left">管理员工单通知</td><td align="left">☑️</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v2board </tag>
            
            <tag> tg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matery主题 文章 Front-matter 介绍</title>
      <link href="/2020/06/01/matery-zhu-ti-wen-zhang-front-matter-jie-shao/"/>
      <url>/2020/06/01/matery-zhu-ti-wen-zhang-front-matter-jie-shao/</url>
      
        <content type="html"><![CDATA[<h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th align="left">配置选项</th><th align="left">默认值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">title</td><td align="left"><code>Markdown</code> 的文件标题</td><td align="left">文章标题，强烈建议填写此选项</td></tr><tr><td align="left">date</td><td align="left">文件创建时的日期时间</td><td align="left">发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td align="left">author</td><td align="left">根 <code>_config.yml</code> 中的 <code>author</code></td><td align="left">文章作者</td></tr><tr><td align="left">img</td><td align="left"><code>featureImages</code> 中的某个值</td><td align="left">文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td align="left">top</td><td align="left"><code>true</code></td><td align="left">推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td align="left">cover</td><td align="left"><code>false</code></td><td align="left"><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td align="left">coverImg</td><td align="left">无</td><td align="left"><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td align="left">password</td><td align="left">无</td><td align="left">文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td align="left">toc</td><td align="left"><code>true</code></td><td align="left">是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td align="left">mathjax</td><td align="left"><code>false</code></td><td align="left">是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td align="left">summary</td><td align="left">无</td><td align="left">文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td align="left">categories</td><td align="left">无</td><td align="left">文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td align="left">tags</td><td align="left">无</td><td align="left">文章标签，一篇文章可以多个标签</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2" target="_blank" rel="noopener">开源中国在线工具</a>、<a href="http://encode.chahuo.com/" target="_blank" rel="noopener">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx" target="_blank" rel="noopener">站长工具</a>。</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><p>yaml</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><p>yaml</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span></code></pre><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matery </tag>
            
            <tag> Front-matter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客主题之hexo-theme-matery的介绍</title>
      <link href="/2020/05/31/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/"/>
      <url>/2020/05/31/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/</url>
      
        <content type="html"><![CDATA[<p>转载：<a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/" target="_blank" rel="noopener">https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/</a></p><p>自己修改的：</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><p>复制成功</p><p>bash</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><p>复制成功</p><p>yaml</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span></code></pre><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><p>复制成功</p><p>bash</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><p>复制成功</p><p>yaml</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h3 id="中文链接转拼音（可选的）"><a href="#中文链接转拼音（可选的）" class="headerlink" title="中文链接转拼音（可选的）"></a>中文链接转拼音（可选的）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin" target="_blank" rel="noopener">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><p>复制成功</p><p>bash</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><p>复制成功</p><p>yaml</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><p>复制成功</p><p>bash</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><p>复制成功</p><p>yaml</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 hexo d 命令异常：You should configure deployment settings in _config.yml first! ...</title>
      <link href="/2020/05/31/shi-yong-hexo-d-ming-ling-yi-chang-you-should-configure-deployment-settings-in-config-yml-first/"/>
      <url>/2020/05/31/shi-yong-hexo-d-ming-ling-yi-chang-you-should-configure-deployment-settings-in-config-yml-first/</url>
      
        <content type="html"><![CDATA[<p>1:排查是否安装一下<code>hexo-deployer-git</code>这个模块<br>没有安的话装使用指令安装:<code>npm install hexo-deployer-git --save</code></p><p>2:检查<code>deploy:</code> 下面的节点 如<code>type:</code>这些 需要缩进。 之前是这种格式</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=473825577228419072&puid=138075780" alt="2020-05-31_121302"></p><p>改成这种格式即可：</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=473825818927333376&puid=138075780" alt="2020-05-31_121404"></p><p>最后注意这段配置之间的空格（一定要有空格）：</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Deployment</span><span class="token comment" spellcheck="true">## Docs: https://hexo.io/docs/deployment.html</span>deploy:  type: <span class="token function">git</span>  repo: git@github.com:rsgdxp/rsgdxp.github.io.git  branch: master</code></pre>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码块显示有问题？</title>
      <link href="/2020/05/31/dai-ma-kuai-xian-shi-you-wen-ti/"/>
      <url>/2020/05/31/dai-ma-kuai-xian-shi-you-wen-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么代码块显示有问题？"><a href="#为什么代码块显示有问题？" class="headerlink" title="为什么代码块显示有问题？"></a>为什么代码块显示有问题？</h2><p>代码要显示正确，要注意以下几个点：</p><ul><li><p>根目录<code>_config.yml</code>文件下的<code>highlight</code>中的<code>line_number</code>要设置为<code>false</code>，因为行号有bug，当然如果你按照上面教程修复了bug，就可以改成<code>true</code>。</p></li><li><p>不要按照网上教程安装<code>kramed</code>插件，已经装了的卸载掉。</p></li><li><p>修改</p><pre><code>node_modules/marked/lib/marked.js</code></pre><p>文件中的</p><pre><code>escape</code></pre><p>和</p><pre><code>em</code></pre><p>两行（在538行左右），改成下面：</p></li></ul><pre class=" language-json"><code class="language-json">  escape<span class="token operator">:</span> /^\\(<span class="token punctuation">[</span>`*\<span class="token punctuation">[</span>\<span class="token punctuation">]</span>(<span class="token punctuation">)</span>#$+\-.!_><span class="token punctuation">]</span><span class="token punctuation">)</span>/<span class="token punctuation">,</span>  em<span class="token operator">:</span> /^\*((?<span class="token operator">:</span>\*\*|<span class="token punctuation">[</span>\s\S<span class="token punctuation">]</span><span class="token punctuation">)</span>+?<span class="token punctuation">)</span>\*(?!\*<span class="token punctuation">)</span>/<span class="token punctuation">,</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020最新WIN环境github + hexo搭建个人博客</title>
      <link href="/2020/05/29/2020-zui-xin-win-huan-jing-github-hexo-da-jian-ge-ren-bo-ke/"/>
      <url>/2020/05/29/2020-zui-xin-win-huan-jing-github-hexo-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<h3 id="1-前言及Hexo介绍"><a href="#1-前言及Hexo介绍" class="headerlink" title="1.前言及Hexo介绍"></a>1.前言及Hexo介绍</h3><h5 id="昨天youtube看到hugo-搭建了有点问题，搜索时又看到了hexo-其实之前查资料时也看到了解过，一搜索参考几篇文章就有了这个站点，但是参考文章里要么github里有变化，要么步骤上有不全不详细的地方，总之没有给初次接触者详细参考的；可能本身也不是特别难搭建吧。废话完了。"><a href="#昨天youtube看到hugo-搭建了有点问题，搜索时又看到了hexo-其实之前查资料时也看到了解过，一搜索参考几篇文章就有了这个站点，但是参考文章里要么github里有变化，要么步骤上有不全不详细的地方，总之没有给初次接触者详细参考的；可能本身也不是特别难搭建吧。废话完了。" class="headerlink" title="昨天youtube看到hugo,搭建了有点问题，搜索时又看到了hexo 其实之前查资料时也看到了解过，一搜索参考几篇文章就有了这个站点，但是参考文章里要么github里有变化，要么步骤上有不全不详细的地方，总之没有给初次接触者详细参考的；可能本身也不是特别难搭建吧。废话完了。"></a>昨天youtube看到hugo,搭建了有点问题，搜索时又看到了hexo 其实之前查资料时也看到了解过，一搜索参考几篇文章就有了这个站点，但是参考文章里要么github里有变化，要么步骤上有不全不详细的地方，总之没有给初次接触者详细参考的；可能本身也不是特别难搭建吧。废话完了。</h5><blockquote><p>Hexo 是基于 Node.js 的快速、简洁且高效的博客框架，拥有超快速度、一键部署、支持 Markdown、丰富的插件等优秀的特性。以上是官方对于Hexo的描述，出了以上的描述，利用Hexo搭建个人博客还有以下特点：</p><ul><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li></ul></blockquote><h5 id="1-1准备工作"><a href="#1-1准备工作" class="headerlink" title="1.1准备工作"></a>1.1准备工作</h5><ul><li><p>一个<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>账户（本文以 WIN环境下 GitHub 为例)</p></li><li><p>安装<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a>，Node.js 是多平台的，去官网选择相应的系统版本下载安装即可,安装选项全部默认，一路点击<code>Next</code>。</p><p>最后安装好之后，按<code>Win+R</code>打开命令提示符，输入<code>node -v</code>和<code>npm -v</code>，如果出现版本号，那么就安装成功了。</p></li><li><p>安装<a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a>，<code>Git</code>也是多平台的，去官网选择相应的系统版本下载安装即可,安装完成后在命令提示符中输入<code>git --version</code>验证是否安装成功。</p></li></ul><h3 id="2-设置GitHub博客"><a href="#2-设置GitHub博客" class="headerlink" title="2.设置GitHub博客"></a>2.设置GitHub博客</h3><ul><li><h5 id="2-1-创建-GitHub-仓库"><a href="#2-1-创建-GitHub-仓库" class="headerlink" title="2.1. 创建 GitHub 仓库"></a>2.1. 创建 GitHub 仓库</h5></li><li><p>注册登录后，点右上角头像左边+号，点 New repository ,新建一个名为你的用户名<code>.github.io</code>的仓库。比如说，如果你的 GitHub 用户名是rsgdxp，那么你就新建的仓库就是rsgdxp.github.io，网站访问地址也是这个地址。</p></li><li><p>需要注意的是注册github的邮箱一定要验证，否则不会成功</p><p>仓库名字必须是：username.github.io，其中username是你的github用户名</p><h5 id="2-2-绑定域名（可选）"><a href="#2-2-绑定域名（可选）" class="headerlink" title="2.2. 绑定域名（可选）"></a>2.2. 绑定域名（可选）</h5><p>本例没有操作，比较好解决。</p><h5 id="2-3-设置-GitHub-Pages"><a href="#2-3-设置-GitHub-Pages" class="headerlink" title="2.3 设置 GitHub Pages"></a>2.3 设置 GitHub Pages</h5><p><code>GitHub Pages</code>是<code>GitHub</code>为我们提供的静态页面服务<code>Hexo</code>就是一个静态博客框架。我们只有开始<code>GitHub Pages</code>才能使我们的博客生效并且能够被访问。<br>打开你的<code>GitHub</code>博客仓库 点击 Settings (设置 )</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=473174808377675776&puid=138075780" alt="2020-05-29_170623"></p><p>圆圈1 选择一个主题 等待一会儿，圆圈2 开启SSL访问 ，圆圈3 就是上面说的绑定域名了。</p></li></ul><h3 id="3-配置"><a href="#3-配置" class="headerlink" title="3.配置"></a>3.配置</h3><h5 id="3-1配置SSH-Key"><a href="#3-1配置SSH-Key" class="headerlink" title="3.1配置SSH Key"></a>3.1配置SSH Key</h5><p>因为你提交代码肯定要拥有你的 GitHub 权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用 SSK key 来解决本地和服务器的连接问题。</p><p>桌面空白处（其实建立好hexo目录后 在目录右键也可以），鼠标右键，<strong>选择Git bash here</strong> 打开终端。</p><p><code>cd ~/. ssh</code></p><p>测试一下是否有 SSH key 的命令，如果提示 No such file or directory或者其它 继续</p><p><code>ssh-keygen -t rsa -C &quot;邮件地址&quot;</code></p><p>这里的<code>邮件地址</code>最好写注册<code>GitHub</code>的地址，这样方便以后的管理。敲入代码后连续按3次回车（如果之前操作那么看提示 我就是这样），最终会生成一个文件在用户目录下</p><p>git bash中输入</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub</code></pre><p>打开你的 GitHub 主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key，并将刚刚输出的内容填入 Key 那里。Title 你可以随便起。最后别忘了保存。</p><h5 id="3-2-测试-SSH-key是否成功"><a href="#3-2-测试-SSH-key是否成功" class="headerlink" title="3.2. 测试 SSH key是否成功"></a>3.2. 测试 SSH key是否成功</h5><p>在终端里面敲入一下命令行并回车：</p><p><code>ssh -T git@github.com</code></p><p>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes 并回车，然后会看到：</p><p><code>Hi rsgdxp! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></p><h5 id="3-3-配置-Git"><a href="#3-3-配置-Git" class="headerlink" title="3.3. 配置 Git"></a>3.3. 配置 Git</h5><p>在终端里面敲入以下命令行并回车：</p><p><code>git config --global user.name &quot;你的 GitHub 用户名&quot;</code></p><p><code>git config --global user.email  &quot;你的 GitHub 注册邮箱&quot;</code></p><h3 id="4-搭建-Hexo-博客"><a href="#4-搭建-Hexo-博客" class="headerlink" title="4. 搭建 Hexo 博客"></a>4. 搭建 Hexo 博客</h3><h5 id="4-1-安装-Hexo"><a href="#4-1-安装-Hexo" class="headerlink" title="4.1. 安装 Hexo"></a>4.1. 安装 Hexo</h5><p>在终端里面敲入以下命令行并回车：</p><p><code>npm install hexo-cli -g</code></p><h5 id="4-2-初始化-Hexo"><a href="#4-2-初始化-Hexo" class="headerlink" title="4.2. 初始化 Hexo"></a>4.2. 初始化 Hexo</h5><p>在电脑的里新建一个存放你博客文件的文件夹（名字可以随便取），比如我的是 F:\hexo</p><p><code>cd F:\hexo</code></p><p><code>hexo init</code></p><p>执行完上面代码，等待下载完。然后生成blog文件</p><p><code>hexo g</code></p><p>Hexo 就会在 public 文件夹生成相关 html 文件，这些文件将来都是要提交到 GitHub 去的。</p><p>先本地预览一下：</p><p><code>hexo s</code></p><p>根据提示，打开浏览器访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000</a> 即可看到内容。默认的主题Licardo一般。</p><p>按<code>ctrl+c</code>关闭</p><h5 id="4-3-修改主题"><a href="#4-3-修改主题" class="headerlink" title="4.3. 修改主题"></a>4.3. 修改主题</h5><p>接下来自己可以替换一个喜欢的主题。这是 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">官方主题</a>库，里面有很多好看的、实用的主题。<br>个人比较喜欢的主题是:<code>hexo-theme-matery</code>，预览 <a href="https://blinkfox.github.io/" target="_blank" rel="noopener">https://blinkfox.github.io/</a><br>首先下载这个主题，在终端里面执行下面的命令：<br>请在稳定版与最新版中二选一</p><p><code>cd F:\hexo\themes</code></p><p><code>git clone https://github.com/blinkfox/hexo-theme-matery.git            # 稳定版</code></p><p><code>git clone -b develop https://github.com/blinkfox/hexo-theme-matery.git # 最新版</code></p><p>本次我选的最新版 预览：<a href="https://rsgdxp.github.io/">https://rsgdxp.github.io/</a></p><p>然后修改<code>Hexo</code>的配置文件，让<code>Hexo</code>使用我们下载的主题来生成博客。找到<code>博客</code>根目录下的<code>_config.yml</code>文件，将其中的<code>theme: landscape</code>改为<code>theme: hexo-theme-matery</code></p><p><em>这里注意：如果改完报错 can not read a block mapping entry</em> </p><blockquote><p>修改 根目录下的_config.yml文件 后 报这个错</p><p>查了半天 冒号后面要有空格；还有说的用中文双引号；还有的说文件编码问题……</p><p>突然看到一条网友回复：</p><p>还有报下一行的错其实是上一行出问题了。。。</p><p>擦 怪不得我修改报错那行半天 怎么改怎么不行，删除还是报错下一行……</p></blockquote><p>然后在终端里面执行下面的命令：</p><pre class=" language-bash"><code class="language-bash">hexo cleanhexo ghexo s</code></pre><p>再次打开浏览器访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000</a> 即可看到更改主题之后的样子了。</p><h5 id="4-4-上传到-GitHub"><a href="#4-4-上传到-GitHub" class="headerlink" title="4.4 上传到 GitHub"></a>4.4 上传到 GitHub</h5><p>首先要配置好<code>Hexo</code>的配置文件，让<code>Hexo</code>知道要上传到哪里<br>修改博客文件夹根目录下的<code>_config.yml</code>中有关<code>deploy</code>的部分：</p><blockquote><p>deploy:<br>  type: git<br>  repository: <a href="mailto:git@github.com">git@github.com</a>:rsgdxp/rsgdxp.github.io.git<br>  branch: master</p></blockquote><p>替换上面rsgdxp为自己github用户名即可。</p><p>然后安装 Hexo 上传到 GitHub 的插件，终端里面执行：</p><p><code>npm install hexo-deployer-git --save</code></p><p>最后执行</p><p><code>hexo d</code></p><p>打开你的网站看看效果吧。</p><h5 id="4-5-Hexo-相关命令"><a href="#4-5-Hexo-相关命令" class="headerlink" title="4.5 Hexo 相关命令"></a>4.5 Hexo 相关命令</h5><blockquote><pre class=" language-bash"><code class="language-bash">hexo new <span class="token string">"postName"</span>      <span class="token comment" spellcheck="true"># 新建文章</span>hexo new page <span class="token string">"pageName"</span> <span class="token comment" spellcheck="true"># 新建页面</span>hexo generate            <span class="token comment" spellcheck="true"># 生成静态页面至public文件夹</span>hexo server              <span class="token comment" spellcheck="true"># 开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span>hexo deploy              <span class="token comment" spellcheck="true"># 部署到GitHub</span>hexo <span class="token function">help</span>                <span class="token comment" spellcheck="true"># 查看帮助</span>hexo version             <span class="token comment" spellcheck="true"># 查看Hexo的版本</span></code></pre></blockquote><p>缩写：</p><blockquote><pre class=" language-bash"><code class="language-bash">hexo n <span class="token operator">==</span> hexo newhexo g <span class="token operator">==</span> hexo generatehexo s <span class="token operator">==</span> hexo serverhexo d <span class="token operator">==</span> hexo deploy</code></pre></blockquote><h5 id="4-6-根目录-config-yml-文件"><a href="#4-6-根目录-config-yml-文件" class="headerlink" title="4.6 根目录 _config.yml 文件"></a>4.6 根目录 _config.yml 文件</h5><p>这里面都是一些<code>Hexo</code>的全局配置（<strong>要区别主题目录里同名文件哦，主题一些个性化定义在此文件修改</strong>），每个参数的意思都比较简单明了，所以就不作详细介绍了。<br>需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题</p><h3 id="5-发布文章"><a href="#5-发布文章" class="headerlink" title="5. 发布文章"></a>5. 发布文章</h3><p><code>hexo new &#39;文章标题&#39;</code></p><p>Hexo 会帮我们在 /source/_posts 文件夹下生成相关 md 格式的文件 ；<code>md</code>格式是<code>Markdown</code>文件的格式，所以只要使用规范的<code>Markdown</code>语法进行书写即可。可以用 <strong>Typora</strong> 等<code>Markdown</code>编辑器写文章。</p><p>一般完整格式如下：</p><pre class=" language-bash"><code class="language-bash">---title: postName <span class="token comment" spellcheck="true">#文章页面上的显示名称，一般是中文</span>date: 2020-05-29 15:30:16 <span class="token comment" spellcheck="true">#文章生成时间，一般不改，当然也可以任意修改</span>categories: 默认分类 <span class="token comment" spellcheck="true">#分类</span>tags: <span class="token punctuation">[</span>tag1,tag2,tag3<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#文章标签，可空，多标签请用格式，注意:后面有个空格</span>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面---以下是正文</code></pre><p>写好文章后 执行</p><pre class=" language-bash"><code class="language-bash">hexo d</code></pre><p>我这里实际是需要等待一会儿，刷新网页即可看到最新状态。</p><p>参考：</p><p><a href="https://www.faber.cc/2019/10/13/4/" target="_blank" rel="noopener">https://www.faber.cc/2019/10/13/4/</a></p><p><a href="https://zhuanlan.zhihu.com/p/82543224" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/82543224</a> 等。</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
